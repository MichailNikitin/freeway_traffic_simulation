# MyNuklear.h nuklear.h
!main.c MyNuklear.h math.h nuklear.h sal.h stdarg.h stddef.h stdint.h stdio.h string.h time.h windows.h #<#>
!nuklear.h sal.h stdarg.h stddef.h stdint.h #<#>
!nuklear_gdi.c MyNuklear.h limits.h malloc.h nuklear.h sal.h stdarg.h stddef.h stdint.h stdlib.h windows.h #<#>
 struct@Car _type_ #<main.c>
 struct@GdiFont _type_ #<nuklear_gdi.c>
 struct@nk_allocator _type_ #<nuklear.h>
 struct@nk_baked_font _type_ #<nuklear.h>
 struct@nk_buffer _type_ #<nuklear.h>
 struct@nk_buffer_marker _type_ #<nuklear.h>
 struct@nk_canvas _type_ #<main.c>
 struct@nk_chart _type_ #<nuklear.h>
 struct@nk_chart_slot _type_ #<nuklear.h>
 struct@nk_clipboard _type_ #<nuklear.h>
 struct@nk_color _type_ #<nuklear.h>
 struct@nk_colorf _type_ #<nuklear.h>
 struct@nk_command _type_ #<nuklear.h>
 struct@nk_command_arc _type_ #<nuklear.h>
 struct@nk_command_arc_filled _type_ #<nuklear.h>
 struct@nk_command_buffer _type_ #<nuklear.h>
 struct@nk_command_circle _type_ #<nuklear.h>
 struct@nk_command_circle_filled _type_ #<nuklear.h>
 struct@nk_command_curve _type_ #<nuklear.h>
 struct@nk_command_custom _type_ #<nuklear.h>
 struct@nk_command_image _type_ #<nuklear.h>
 struct@nk_command_line _type_ #<nuklear.h>
 struct@nk_command_polygon _type_ #<nuklear.h>
 struct@nk_command_polygon_filled _type_ #<nuklear.h>
 struct@nk_command_polyline _type_ #<nuklear.h>
 struct@nk_command_rect _type_ #<nuklear.h>
 struct@nk_command_rect_filled _type_ #<nuklear.h>
 struct@nk_command_rect_multi_color _type_ #<nuklear.h>
 struct@nk_command_scissor _type_ #<nuklear.h>
 struct@nk_command_text _type_ #<nuklear.h>
 struct@nk_command_triangle _type_ #<nuklear.h>
 struct@nk_command_triangle_filled _type_ #<nuklear.h>
 struct@nk_configuration_stacks _type_ #<nuklear.h>
 struct@nk_context _type_ #<nuklear.h>
 struct@nk_convert_config _type_ #<nuklear.h>
 struct@nk_cursor _type_ #<nuklear.h>
 struct@nk_draw_command _type_ #<nuklear.h>
 struct@nk_draw_list _type_ #<nuklear.h>
 struct@nk_draw_null_texture _type_ #<nuklear.h>
 struct@nk_draw_vertex_layout_element _type_ #<nuklear.h>
 struct@nk_edit_state _type_ #<nuklear.h>
 struct@nk_font _type_ #<nuklear.h>
 struct@nk_font_atlas _type_ #<nuklear.h>
 struct@nk_font_config _type_ #<nuklear.h>
 struct@nk_font_glyph _type_ #<nuklear.h>
 struct@nk_image _type_ #<nuklear.h>
 struct@nk_input _type_ #<nuklear.h>
 struct@nk_key _type_ #<nuklear.h>
 struct@nk_keyboard _type_ #<nuklear.h>
 struct@nk_list_view _type_ #<nuklear.h>
 struct@nk_memory _type_ #<nuklear.h>
 struct@nk_memory_status _type_ #<nuklear.h>
 struct@nk_menu_state _type_ #<nuklear.h>
 struct@nk_mouse _type_ #<nuklear.h>
 struct@nk_mouse_button _type_ #<nuklear.h>
 struct@nk_page _type_ #<nuklear.h>
 struct@nk_page_element _type_ #<nuklear.h>
 struct@nk_panel _type_ #<nuklear.h>
 struct@nk_pool _type_ #<nuklear.h>
 struct@nk_popup_buffer _type_ #<nuklear.h>
 struct@nk_popup_state _type_ #<nuklear.h>
 struct@nk_property_state _type_ #<nuklear.h>
 struct@nk_rect _type_ #<nuklear.h>
 struct@nk_recti _type_ #<nuklear.h>
 struct@nk_row_layout _type_ #<nuklear.h>
 struct@nk_scroll _type_ #<nuklear.h>
 struct@nk_str _type_ #<nuklear.h>
 struct@nk_style _type_ #<nuklear.h>
 struct@nk_style_button _type_ #<nuklear.h>
 struct@nk_style_chart _type_ #<nuklear.h>
 struct@nk_style_combo _type_ #<nuklear.h>
 struct@nk_style_edit _type_ #<nuklear.h>
 struct@nk_style_item _type_ #<nuklear.h>
 struct@nk_style_progress _type_ #<nuklear.h>
 struct@nk_style_property _type_ #<nuklear.h>
 struct@nk_style_scrollbar _type_ #<nuklear.h>
 struct@nk_style_selectable _type_ #<nuklear.h>
 struct@nk_style_slider _type_ #<nuklear.h>
 struct@nk_style_tab _type_ #<nuklear.h>
 struct@nk_style_text _type_ #<nuklear.h>
 struct@nk_style_toggle _type_ #<nuklear.h>
 struct@nk_style_window _type_ #<nuklear.h>
 struct@nk_style_window_header _type_ #<nuklear.h>
 struct@nk_table _type_ #<nuklear.h>
 struct@nk_text_edit _type_ #<nuklear.h>
 struct@nk_text_undo_record _type_ #<nuklear.h>
 struct@nk_text_undo_state _type_ #<nuklear.h>
 struct@nk_user_font _type_ #<nuklear.h>
 struct@nk_user_font_glyph _type_ #<nuklear.h>
 struct@nk_vec2 _type_ #<nuklear.h>
 struct@nk_vec2i _type_ #<nuklear.h>
 struct@nk_window _type_ #<nuklear.h>
AccelesCar : int[] #<main.c>
CarsCount : int #<main.c>
Collision : int #<main.c>
FreeSpaceInStart : int #<main.c>
GdiFont _type_ #<nuklear_gdi.c>
GlobalModelTime : double #<main.c>
GodsTouch : int #<main.c>
HEIDTH #<main.c>
HEIDTH_BUTTON #<main.c>
HEIDTH_TEXT #<main.c>
MaxSpeed_KmH : double #<main.c>
ModelRoad : double #<main.c>
NK_ABS(a) #<nuklear.h>
NK_ALIGNOF(t) #<nuklear.h>
NK_ALIGN_PTR(x, mask) #<nuklear.h>
NK_ALIGN_PTR_BACK(x, mask) #<nuklear.h>
NK_API #<nuklear.h>
NK_BETWEEN(x, a, b) #<nuklear.h>
NK_CLAMP(i,v,x) #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE :  #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE(const struct nk, user_font, user_font*) #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE(enum nk, button_behavior, button_behavior) #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE(prefix, name, type) #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE(struct nk, color, color) #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE(struct nk, style_item, style_item) #<nuklear.h>
NK_CONFIGURATION_STACK_TYPE(struct nk, vec2, vec2) #<nuklear.h>
NK_CONFIG_STACK :  #<nuklear.h>
NK_CONFIG_STACK(float, NK_FLOAT_STACK_SIZE) #<nuklear.h>
NK_CONFIG_STACK(type,size) #<nuklear.h>
NK_CONTAINER_OF(ptr,type,member) #<nuklear.h>
NK_CONTAINS(x, y, w, h, bx, by, bw, bh) #<nuklear.h>
NK_FILE_LINE #<nuklear.h>
NK_FLAG(x) #<nuklear.h>
NK_GLOBAL #<nuklear.h>
NK_INBOX(px, py, x, y, w, h) #<nuklear.h>
NK_INCLUDE_DEFAULT_ALLOCATOR #<nuklear.h>
NK_INCLUDE_STANDARD_IO #<nuklear.h>
NK_INCLUDE_STANDARD_VARARGS #<nuklear.h>
NK_INT16 #<nuklear.h>
NK_INT32 #<nuklear.h>
NK_INT8 #<nuklear.h>
NK_INTERN #<nuklear.h>
NK_INTERSECT(x0, y0, w0, h0, x1, y1, w1, h1) #<nuklear.h>
NK_LEN(a) #<nuklear.h>
NK_LIB #<nuklear.h>
NK_MACRO_STRINGIFY(x) #<nuklear.h>
NK_MAX(a,b) #<nuklear.h>
NK_MAX_FLOAT_PRECISION #<nuklear.h>
NK_MIN(a,b) #<nuklear.h>
NK_OFFSETOF(st,m) #<nuklear.h>
NK_PI #<nuklear.h>
NK_POINTER_TYPE #<nuklear.h>
NK_PRINTF_FORMAT_STRING #<nuklear.h>
NK_PRINTF_VALIST_FUNC(fmtargnumber) #<nuklear.h>
NK_PRINTF_VARARG_FUNC(fmtargnumber) #<nuklear.h>
NK_SATURATE(x) #<nuklear.h>
NK_SIZE_TYPE #<nuklear.h>
NK_STATIC_ASSERT :  #<nuklear.h>
NK_STATIC_ASSERT(exp) #<nuklear.h>
NK_STORAGE #<nuklear.h>
NK_STRINGIFY(x) #<nuklear.h>
NK_STRING_JOIN(arg1, arg2) #<nuklear.h>
NK_STRING_JOIN_DELAY(arg1, arg2) #<nuklear.h>
NK_STRING_JOIN_IMMEDIATE(arg1, arg2) #<nuklear.h>
NK_UINT16 #<nuklear.h>
NK_UINT32 #<nuklear.h>
NK_UINT8 #<nuklear.h>
NK_UNDEFINED #<nuklear.h>
NK_UNIQUE_NAME(name) #<nuklear.h>
NK_UNUSED(x) #<nuklear.h>
NK_UTF_INVALID #<nuklear.h>
NK_UTF_SIZE #<nuklear.h>
NK_VALUE_PAGE_CAPACITY #<nuklear.h>
NK_VERTEX_LAYOUT_END #<nuklear.h>
SafeDist_m : int #<main.c>
TimeNextCar : double #<main.c>
Times : nk_gdifont #<main.c>
WIDTH #<main.c>
WIDTH_BUTTON #<main.c>
WIN32_LEAN_AND_MEAN #<nuklear_gdi.c>
WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam) -> LRESULT CALLBACK #<nuklear_gdi.c>
about() -> void #<main.c>
add_car_in_start(int i) -> void #<main.c>
add_car_in_start(int i_car) -> void #<main.c>
canvas : struct nk_canvas #<main.c>
canvas_begin(struct nk_context* ctx, struct nk_canvas* canvas, nk_flags flags, int x, int y, int width, int height, struct nk_color background_color) -> void #<main.c>
canvas_end(struct nk_context* ctx, struct nk_canvas* canvas) -> void #<main.c>
cars : Car[] #<main.c>
convert_color(struct nk_color c) -> COLORREF #<nuklear_gdi.c>
ctx : struct nk_context* #<main.c>
dv_GT : double #<main.c>
enum :  #<nuklear.h>
gdi : struct gdi_param #<nuklear_gdi.c>
gdi_param : struct #<MyNuklear.h>
gdifont : GdiFont* #<nuklear_gdi.c>
id : int #<nuklear.h>
k_model : int #<main.c>
main(void) -> int #<main.c>
menu() -> void #<main.c>
model(double t) -> void #<main.c>
model_dt : double #<main.c>
model_time : double #<main.c>
model_view() -> void #<main.c>
moving_car(int i, int comand) -> void #<main.c>
moving_car(int i, int speed_comand) -> void #<main.c>
nk_MyGdi_dispatch() -> void #<main.c>
nk__begin(struct nk_context*) -> NK_API const struct nk_command* #<nuklear.h>
nk__draw_begin(const struct nk_context*, const struct nk_buffer*) -> NK_API const struct nk_draw_command* #<nuklear.h>
nk__draw_end(const struct nk_context*, const struct nk_buffer*) -> NK_API const struct nk_draw_command* #<nuklear.h>
nk__draw_list_begin(const struct nk_draw_list*, const struct nk_buffer*) -> NK_API const struct nk_draw_command* #<nuklear.h>
nk__draw_list_end(const struct nk_draw_list*, const struct nk_buffer*) -> NK_API const struct nk_draw_command* #<nuklear.h>
nk__draw_list_next(const struct nk_draw_command*, const struct nk_buffer*, const struct nk_draw_list*) -> NK_API const struct nk_draw_command* #<nuklear.h>
nk__draw_next(const struct nk_draw_command*, const struct nk_buffer*, const struct nk_context*) -> NK_API const struct nk_draw_command* #<nuklear.h>
nk__next(struct nk_context*, const struct nk_command*) -> NK_API const struct nk_command* #<nuklear.h>
nk_allocation_type : enum #<nuklear.h>
nk_allocator : struct #<nuklear.h>
nk_anti_aliasing : enum #<nuklear.h>
nk_begin(struct nk_context* ctx, const char* title, struct nk_rect bounds, nk_flags flags) -> NK_API int #<nuklear.h>
nk_begin_titled(struct nk_context* ctx, const char* name, const char* title, struct nk_rect bounds, nk_flags flags) -> NK_API int #<nuklear.h>
nk_buffer : struct #<nuklear.h>
nk_buffer_allocation_type : enum #<nuklear.h>
nk_buffer_clear(struct nk_buffer*) -> NK_API void #<nuklear.h>
nk_buffer_free(struct nk_buffer*) -> NK_API void #<nuklear.h>
nk_buffer_info(struct nk_memory_status*, struct nk_buffer*) -> NK_API void #<nuklear.h>
nk_buffer_init(struct nk_buffer*, const struct nk_allocator*, nk_size size) -> NK_API void #<nuklear.h>
nk_buffer_init_default(struct nk_buffer*) -> NK_API void #<nuklear.h>
nk_buffer_init_fixed(struct nk_buffer*, void* memory, nk_size size) -> NK_API void #<nuklear.h>
nk_buffer_mark(struct nk_buffer*, enum nk_buffer_allocation_type type) -> NK_API void #<nuklear.h>
nk_buffer_memory(struct nk_buffer*) -> NK_API void* #<nuklear.h>
nk_buffer_memory_const(const struct nk_buffer*) -> NK_API const void* #<nuklear.h>
nk_buffer_push(struct nk_buffer*, enum nk_buffer_allocation_type type, const void* memory, nk_size size, nk_size align) -> NK_API void #<nuklear.h>
nk_buffer_reset(struct nk_buffer*, enum nk_buffer_allocation_type type) -> NK_API void #<nuklear.h>
nk_buffer_total(struct nk_buffer*) -> NK_API nk_size #<nuklear.h>
nk_button_behavior : enum #<nuklear.h>
nk_button_color(struct nk_context*, struct nk_color) -> NK_API int #<nuklear.h>
nk_button_image(struct nk_context*, struct nk_image img) -> NK_API int #<nuklear.h>
nk_button_image_label(struct nk_context*, struct nk_image img, const char*, nk_flags text_alignment) -> NK_API int #<nuklear.h>
nk_button_image_label_styled(struct nk_context*, const struct nk_style_button*, struct nk_image img, const char*, nk_flags text_alignment) -> NK_API int #<nuklear.h>
nk_button_image_styled(struct nk_context*, const struct nk_style_button*, struct nk_image img) -> NK_API int #<nuklear.h>
nk_button_image_text(struct nk_context*, struct nk_image img, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_button_image_text_styled(struct nk_context*, const struct nk_style_button*, struct nk_image img, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_button_label(struct nk_context*, const char* title) -> NK_API int #<nuklear.h>
nk_button_label_styled(struct nk_context*, const struct nk_style_button*, const char* title) -> NK_API int #<nuklear.h>
nk_button_pop_behavior(struct nk_context*) -> NK_API int #<nuklear.h>
nk_button_push_behavior(struct nk_context*, enum nk_button_behavior) -> NK_API int #<nuklear.h>
nk_button_set_behavior(struct nk_context*, enum nk_button_behavior) -> NK_API void #<nuklear.h>
nk_button_symbol(struct nk_context*, enum nk_symbol_type) -> NK_API int #<nuklear.h>
nk_button_symbol_label(struct nk_context*, enum nk_symbol_type, const char*, nk_flags text_alignment) -> NK_API int #<nuklear.h>
nk_button_symbol_label_styled(struct nk_context* ctx, const struct nk_style_button* style, enum nk_symbol_type symbol, const char* title, nk_flags align) -> NK_API int #<nuklear.h>
nk_button_symbol_styled(struct nk_context*, const struct nk_style_button*, enum nk_symbol_type) -> NK_API int #<nuklear.h>
nk_button_symbol_text(struct nk_context*, enum nk_symbol_type, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_button_symbol_text_styled(struct nk_context*, const struct nk_style_button*, enum nk_symbol_type, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_button_text(struct nk_context*, const char* title, int len) -> NK_API int #<nuklear.h>
nk_button_text_styled(struct nk_context*, const struct nk_style_button*, const char* title, int len) -> NK_API int #<nuklear.h>
nk_buttons : enum #<nuklear.h>
nk_byte _type_ #<nuklear.h>
nk_char _type_ #<nuklear.h>
nk_chart_add_slot(struct nk_context* ctx, const enum nk_chart_type, int count, float min_value, float max_value) -> NK_API void #<nuklear.h>
nk_chart_add_slot_colored(struct nk_context* ctx, const enum nk_chart_type, struct nk_color, struct nk_color active, int count, float min_value, float max_value) -> NK_API void #<nuklear.h>
nk_chart_begin(struct nk_context*, enum nk_chart_type, int num, float min, float max) -> NK_API int #<nuklear.h>
nk_chart_begin_colored(struct nk_context*, enum nk_chart_type, struct nk_color, struct nk_color active, int num, float min, float max) -> NK_API int #<nuklear.h>
nk_chart_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_chart_event : enum #<nuklear.h>
nk_chart_push(struct nk_context*, float) -> NK_API nk_flags #<nuklear.h>
nk_chart_push_slot(struct nk_context*, float, int) -> NK_API nk_flags #<nuklear.h>
nk_chart_type : enum #<nuklear.h>
nk_check_flags_label(struct nk_context*, const char*, unsigned int flags, unsigned int value) -> NK_API unsigned #<nuklear.h>
nk_check_flags_text(struct nk_context*, const char*, int, unsigned int flags, unsigned int value) -> NK_API unsigned #<nuklear.h>
nk_check_label(struct nk_context*, const char*, int active) -> NK_API int #<nuklear.h>
nk_check_text(struct nk_context*, const char*, int, int active) -> NK_API int #<nuklear.h>
nk_checkbox_flags_label(struct nk_context*, const char*, unsigned int* flags, unsigned int value) -> NK_API int #<nuklear.h>
nk_checkbox_flags_text(struct nk_context*, const char*, int, unsigned int* flags, unsigned int value) -> NK_API int #<nuklear.h>
nk_checkbox_label(struct nk_context*, const char*, int* active) -> NK_API int #<nuklear.h>
nk_checkbox_text(struct nk_context*, const char*, int, int* active) -> NK_API int #<nuklear.h>
nk_clear(struct nk_context*) -> NK_API void #<nuklear.h>
nk_collapse_states : enum #<nuklear.h>
nk_color_cf(struct nk_color) -> NK_API struct nk_colorf #<nuklear.h>
nk_color_d(double* r, double* g, double* b, double* a, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_dv(double* rgba_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_f(float* r, float* g, float* b, float* a, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_format : enum #<nuklear.h>
nk_color_fv(float* rgba_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hex_rgb(char* output, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hex_rgba(char* output, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsv_b(nk_byte* out_h, nk_byte* out_s, nk_byte* out_v, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsv_bv(nk_byte* hsv_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsv_f(float* out_h, float* out_s, float* out_v, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsv_fv(float* hsv_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsv_i(int* out_h, int* out_s, int* out_v, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsv_iv(int* hsv_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsva_b(nk_byte* h, nk_byte* s, nk_byte* v, nk_byte* a, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsva_bv(nk_byte* hsva_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsva_f(float* out_h, float* out_s, float* out_v, float* out_a, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsva_fv(float* hsva_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsva_i(int* h, int* s, int* v, int* a, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_hsva_iv(int* hsva_out, struct nk_color) -> NK_API void #<nuklear.h>
nk_color_pick(struct nk_context*, struct nk_colorf*, enum nk_color_format) -> NK_API int #<nuklear.h>
nk_color_picker(struct nk_context*, struct nk_colorf, enum nk_color_format) -> NK_API struct nk_colorf #<nuklear.h>
nk_color_u32(struct nk_color) -> NK_API nk_uint #<nuklear.h>
nk_colorf_hsva_f(float* out_h, float* out_s, float* out_v, float* out_a, struct nk_colorf in) -> NK_API void #<nuklear.h>
nk_colorf_hsva_fv(float* hsva, struct nk_colorf in) -> NK_API void #<nuklear.h>
nk_combo(struct nk_context*, const char** items, int count, int selected, int item_height, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_color(struct nk_context*, struct nk_color color, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_image(struct nk_context*, struct nk_image img, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_image_label(struct nk_context*, const char* selected, struct nk_image, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_image_text(struct nk_context*, const char* selected, int, struct nk_image, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_label(struct nk_context*, const char* selected, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_symbol(struct nk_context*, enum nk_symbol_type, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_symbol_label(struct nk_context*, const char* selected, enum nk_symbol_type, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_symbol_text(struct nk_context*, const char* selected, int, enum nk_symbol_type, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_begin_text(struct nk_context*, const char* selected, int, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_callback(struct nk_context*, void(* item_getter)(void*, int, const char**), void* userdata, int selected, int count, int item_height, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_close(struct nk_context*) -> NK_API void #<nuklear.h>
nk_combo_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_combo_item_image_label(struct nk_context*, struct nk_image, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_combo_item_image_text(struct nk_context*, struct nk_image, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_combo_item_label(struct nk_context*, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_combo_item_symbol_label(struct nk_context*, enum nk_symbol_type, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_combo_item_symbol_text(struct nk_context*, enum nk_symbol_type, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_combo_item_text(struct nk_context*, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_combo_separator(struct nk_context*, const char* items_separated_by_separator, int separator, int selected, int count, int item_height, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combo_string(struct nk_context*, const char* items_separated_by_zeros, int selected, int count, int item_height, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_combobox(struct nk_context*, const char** items, int count, int* selected, int item_height, struct nk_vec2 size) -> NK_API void #<nuklear.h>
nk_combobox_callback(struct nk_context*, void(* item_getter)(void*, int, const char**), void*, int* selected, int count, int item_height, struct nk_vec2 size) -> NK_API void #<nuklear.h>
nk_combobox_separator(struct nk_context*, const char* items_separated_by_separator, int separator, int* selected, int count, int item_height, struct nk_vec2 size) -> NK_API void #<nuklear.h>
nk_combobox_string(struct nk_context*, const char* items_separated_by_zeros, int* selected, int count, int item_height, struct nk_vec2 size) -> NK_API void #<nuklear.h>
nk_command_buffer : struct #<nuklear.h>
nk_command_clipping : enum #<nuklear.h>
nk_command_custom_callback _type_ #<nuklear.h>
nk_command_type : enum #<nuklear.h>
nk_context : struct #<nuklear.h>
nk_contextual_begin(struct nk_context*, nk_flags, struct nk_vec2, struct nk_rect trigger_bounds) -> NK_API int #<nuklear.h>
nk_contextual_close(struct nk_context*) -> NK_API void #<nuklear.h>
nk_contextual_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_contextual_item_image_label(struct nk_context*, struct nk_image, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_contextual_item_image_text(struct nk_context*, struct nk_image, const char*, int len, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_contextual_item_label(struct nk_context*, const char*, nk_flags align) -> NK_API int #<nuklear.h>
nk_contextual_item_symbol_label(struct nk_context*, enum nk_symbol_type, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_contextual_item_symbol_text(struct nk_context*, enum nk_symbol_type, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_contextual_item_text(struct nk_context*, const char*, int, nk_flags align) -> NK_API int #<nuklear.h>
nk_convert(struct nk_context*, struct nk_buffer* cmds, struct nk_buffer* vertices, struct nk_buffer* elements, const struct nk_convert_config*) -> NK_API nk_flags #<nuklear.h>
nk_convert_config : struct #<nuklear.h>
nk_convert_result : enum #<nuklear.h>
nk_create_image(struct nk_image* image, const char* frame_buffer, const int width, const int height) -> void #<nuklear_gdi.c>
nk_delete_image(struct nk_image* image) -> void #<nuklear_gdi.c>
nk_draw_command : struct #<nuklear.h>
nk_draw_foreach(cmd,ctx, b) #<nuklear.h>
nk_draw_image(struct nk_command_buffer*, struct nk_rect, const struct nk_image*, struct nk_color) -> NK_API void #<nuklear.h>
nk_draw_index _type_ #<nuklear.h>
nk_draw_list : struct #<nuklear.h>
nk_draw_list_add_image(struct nk_draw_list*, struct nk_image texture, struct nk_rect rect, struct nk_color) -> NK_API void #<nuklear.h>
nk_draw_list_add_text(struct nk_draw_list*, const struct nk_user_font*, struct nk_rect, const char* text, int len, float font_height, struct nk_color) -> NK_API void #<nuklear.h>
nk_draw_list_fill_circle(struct nk_draw_list*, struct nk_vec2 center, float radius, struct nk_color col, unsigned int segs) -> NK_API void #<nuklear.h>
nk_draw_list_fill_poly_convex(struct nk_draw_list*, const struct nk_vec2* points, const unsigned int count, struct nk_color, enum nk_anti_aliasing) -> NK_API void #<nuklear.h>
nk_draw_list_fill_rect(struct nk_draw_list*, struct nk_rect rect, struct nk_color, float rounding) -> NK_API void #<nuklear.h>
nk_draw_list_fill_rect_multi_color(struct nk_draw_list*, struct nk_rect rect, struct nk_color left, struct nk_color top, struct nk_color right, struct nk_color bottom) -> NK_API void #<nuklear.h>
nk_draw_list_fill_triangle(struct nk_draw_list*, struct nk_vec2 a, struct nk_vec2 b, struct nk_vec2 c, struct nk_color) -> NK_API void #<nuklear.h>
nk_draw_list_foreach(cmd, can, b) #<nuklear.h>
nk_draw_list_init(struct nk_draw_list*) -> NK_API void #<nuklear.h>
nk_draw_list_path_arc_to(struct nk_draw_list*, struct nk_vec2 center, float radius, float a_min, float a_max, unsigned int segments) -> NK_API void #<nuklear.h>
nk_draw_list_path_arc_to_fast(struct nk_draw_list*, struct nk_vec2 center, float radius, int a_min, int a_max) -> NK_API void #<nuklear.h>
nk_draw_list_path_clear(struct nk_draw_list*) -> NK_API void #<nuklear.h>
nk_draw_list_path_curve_to(struct nk_draw_list*, struct nk_vec2 p2, struct nk_vec2 p3, struct nk_vec2 p4, unsigned int num_segments) -> NK_API void #<nuklear.h>
nk_draw_list_path_fill(struct nk_draw_list*, struct nk_color) -> NK_API void #<nuklear.h>
nk_draw_list_path_line_to(struct nk_draw_list*, struct nk_vec2 pos) -> NK_API void #<nuklear.h>
nk_draw_list_path_rect_to(struct nk_draw_list*, struct nk_vec2 a, struct nk_vec2 b, float rounding) -> NK_API void #<nuklear.h>
nk_draw_list_path_stroke(struct nk_draw_list*, struct nk_color, enum nk_draw_list_stroke closed, float thickness) -> NK_API void #<nuklear.h>
nk_draw_list_push_userdata(struct nk_draw_list*, nk_handle userdata) -> NK_API void #<nuklear.h>
nk_draw_list_setup(struct nk_draw_list*, const struct nk_convert_config*, struct nk_buffer* cmds, struct nk_buffer* vertices, struct nk_buffer* elements, enum nk_anti_aliasing line_aa, enum nk_anti_aliasing shape_aa) -> NK_API void #<nuklear.h>
nk_draw_list_stroke : enum #<nuklear.h>
nk_draw_list_stroke_circle(struct nk_draw_list*, struct nk_vec2 center, float radius, struct nk_color, unsigned int segs, float thickness) -> NK_API void #<nuklear.h>
nk_draw_list_stroke_curve(struct nk_draw_list*, struct nk_vec2 p0, struct nk_vec2 cp0, struct nk_vec2 cp1, struct nk_vec2 p1, struct nk_color, unsigned int segments, float thickness) -> NK_API void #<nuklear.h>
nk_draw_list_stroke_line(struct nk_draw_list*, struct nk_vec2 a, struct nk_vec2 b, struct nk_color, float thickness) -> NK_API void #<nuklear.h>
nk_draw_list_stroke_poly_line(struct nk_draw_list*, const struct nk_vec2* pnts, const unsigned int cnt, struct nk_color, enum nk_draw_list_stroke, float thickness, enum nk_anti_aliasing) -> NK_API void #<nuklear.h>
nk_draw_list_stroke_rect(struct nk_draw_list*, struct nk_rect rect, struct nk_color, float rounding, float thickness) -> NK_API void #<nuklear.h>
nk_draw_list_stroke_triangle(struct nk_draw_list*, struct nk_vec2 a, struct nk_vec2 b, struct nk_vec2 c, struct nk_color, float thickness) -> NK_API void #<nuklear.h>
nk_draw_text(struct nk_command_buffer*, struct nk_rect, const char* text, int len, const struct nk_user_font*, struct nk_color, struct nk_color) -> NK_API void #<nuklear.h>
nk_draw_vertex_layout_attribute : enum #<nuklear.h>
nk_draw_vertex_layout_element : struct #<nuklear.h>
nk_draw_vertex_layout_format : enum #<nuklear.h>
nk_edit_buffer(struct nk_context*, nk_flags, struct nk_text_edit*, nk_plugin_filter) -> NK_API nk_flags #<nuklear.h>
nk_edit_events : enum #<nuklear.h>
nk_edit_flags : enum #<nuklear.h>
nk_edit_focus(struct nk_context*, nk_flags flags) -> NK_API void #<nuklear.h>
nk_edit_string(struct nk_context*, nk_flags, char* buffer, int* len, int max, nk_plugin_filter) -> NK_API nk_flags #<nuklear.h>
nk_edit_string_zero_terminated(struct nk_context*, nk_flags, char* buffer, int max, nk_plugin_filter) -> NK_API nk_flags #<nuklear.h>
nk_edit_types : enum #<nuklear.h>
nk_edit_unfocus(struct nk_context*) -> NK_API void #<nuklear.h>
nk_end(struct nk_context* ctx) -> NK_API void #<nuklear.h>
nk_fill_arc(struct nk_command_buffer*, float cx, float cy, float radius, float a_min, float a_max, struct nk_color) -> NK_API void #<nuklear.h>
nk_fill_circle(struct nk_command_buffer*, struct nk_rect, struct nk_color) -> NK_API void #<nuklear.h>
nk_fill_polygon(struct nk_command_buffer*, float*, int point_count, struct nk_color) -> NK_API void #<nuklear.h>
nk_fill_rect(struct nk_command_buffer*, struct nk_rect, float rounding, struct nk_color) -> NK_API void #<nuklear.h>
nk_fill_rect_multi_color(struct nk_command_buffer*, struct nk_rect, struct nk_color left, struct nk_color top, struct nk_color right, struct nk_color bottom) -> NK_API void #<nuklear.h>
nk_fill_triangle(struct nk_command_buffer*, float x0, float y0, float x1, float y1, float x2, float y2, struct nk_color) -> NK_API void #<nuklear.h>
nk_filter_ascii(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_filter_binary(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_filter_decimal(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_filter_default(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_filter_float(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_filter_hex(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_filter_oct(const struct nk_text_edit*, nk_rune unicode) -> NK_API int #<nuklear.h>
nk_flags _type_ #<nuklear.h>
nk_float #<nuklear.h>
nk_font : struct #<nuklear.h>
nk_font_atlas_add(struct nk_font_atlas*, const struct nk_font_config*) -> NK_API struct nk_font* #<nuklear.h>
nk_font_atlas_add_compressed(struct nk_font_atlas*, void* memory, nk_size size, float height, const struct nk_font_config*) -> NK_API struct nk_font* #<nuklear.h>
nk_font_atlas_add_compressed_base85(struct nk_font_atlas*, const char* data, float height, const struct nk_font_config* config) -> NK_API struct nk_font* #<nuklear.h>
nk_font_atlas_add_default(struct nk_font_atlas*, float height, const struct nk_font_config*) -> NK_API struct nk_font* #<nuklear.h>
nk_font_atlas_add_from_file(struct nk_font_atlas* atlas, const char* file_path, float height, const struct nk_font_config*) -> NK_API struct nk_font* #<nuklear.h>
nk_font_atlas_add_from_memory(struct nk_font_atlas* atlas, void* memory, nk_size size, float height, const struct nk_font_config* config) -> NK_API struct nk_font* #<nuklear.h>
nk_font_atlas_bake(struct nk_font_atlas*, int* width, int* height, enum nk_font_atlas_format) -> NK_API const void* #<nuklear.h>
nk_font_atlas_begin(struct nk_font_atlas*) -> NK_API void #<nuklear.h>
nk_font_atlas_cleanup(struct nk_font_atlas* atlas) -> NK_API void #<nuklear.h>
nk_font_atlas_clear(struct nk_font_atlas*) -> NK_API void #<nuklear.h>
nk_font_atlas_end(struct nk_font_atlas*, nk_handle tex, struct nk_draw_null_texture*) -> NK_API void #<nuklear.h>
nk_font_atlas_format : enum #<nuklear.h>
nk_font_atlas_init(struct nk_font_atlas*, struct nk_allocator*) -> NK_API void #<nuklear.h>
nk_font_atlas_init_custom(struct nk_font_atlas*, struct nk_allocator* persistent, struct nk_allocator* transient) -> NK_API void #<nuklear.h>
nk_font_atlas_init_default(struct nk_font_atlas*) -> NK_API void #<nuklear.h>
nk_font_chinese_glyph_ranges(void) -> NK_API const nk_rune* #<nuklear.h>
nk_font_config(float pixel_height) -> NK_API struct nk_font_config #<nuklear.h>
nk_font_coord_type : enum #<nuklear.h>
nk_font_cyrillic_glyph_ranges(void) -> NK_API const nk_rune* #<nuklear.h>
nk_font_default_glyph_ranges(void) -> NK_API const nk_rune* #<nuklear.h>
nk_font_find_glyph(struct nk_font*, nk_rune unicode) -> NK_API const struct nk_font_glyph* #<nuklear.h>
nk_font_korean_glyph_ranges(void) -> NK_API const nk_rune* #<nuklear.h>
nk_foreach(c, ctx) #<nuklear.h>
nk_free(struct nk_context*) -> NK_API void #<nuklear.h>
nk_gdi_blit(HDC dc) -> void #<nuklear_gdi.c>
nk_gdi_clear(HDC dc, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_clipboard_copy(nk_handle usr, const char* text, int len) -> void #<nuklear_gdi.c>
nk_gdi_clipboard_paste(nk_handle usr, struct nk_text_edit* edit) -> void #<nuklear_gdi.c>
nk_gdi_dispatch(struct nk_context* ctx, int* running) -> NK_API void #<nuklear.h>
nk_gdi_draw_image(short x, short y, unsigned short w, unsigned short h, struct nk_image img, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_draw_text(HDC dc, short x, short y, unsigned short w, unsigned short h, const char* text, int len, GdiFont* font, struct nk_color cbg, struct nk_color cfg) -> void #<nuklear_gdi.c>
nk_gdi_fill_circle(HDC dc, short x, short y, unsigned short w, unsigned short h, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_fill_polygon(HDC dc, const struct nk_vec2i* pnts, int count, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_fill_rect(HDC dc, short x, short y, unsigned short w, unsigned short h, unsigned short r, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_fill_triangle(HDC dc, short x0, short y0, short x1, short y1, short x2, short y2, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam) -> NK_API int #<nuklear_gdi.c>
nk_gdi_init(unsigned int width, unsigned int height, const char* name) -> NK_API struct nk_context* #<nuklear.h>
nk_gdi_rect_multi_color(HDC dc, short x, short y, unsigned short w, unsigned short h, struct nk_color left, struct nk_color top, struct nk_color right, struct nk_color bottom) -> void #<nuklear_gdi.c>
nk_gdi_release(void) -> NK_API void #<nuklear.h>
nk_gdi_render(struct nk_color clear) -> NK_API void #<nuklear.h>
nk_gdi_scissor(HDC dc, float x, float y, float w, float h) -> void #<nuklear_gdi.c>
nk_gdi_set_font(nk_gdifont font) -> NK_API void #<nuklear.h>
nk_gdi_set_font(nk_gdifont gdifont) -> NK_API void #<nuklear_gdi.c>
nk_gdi_set_vertexColor(PTRIVERTEX tri, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_shutdown(void) -> NK_API void #<nuklear.h>
nk_gdi_stroke_circle(HDC dc, short x, short y, unsigned short w, unsigned short h, unsigned short line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_stroke_curve(HDC dc, struct nk_vec2i p1, struct nk_vec2i p2, struct nk_vec2i p3, struct nk_vec2i p4, unsigned short line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_stroke_line(HDC dc, short x0, short y0, short x1, short y1, unsigned int line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_stroke_polygon(HDC dc, const struct nk_vec2i* pnts, int count, unsigned short line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_stroke_polyline(HDC dc, const struct nk_vec2i* pnts, int count, unsigned short line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_stroke_rect(HDC dc, short x, short y, unsigned short w, unsigned short h, unsigned short r, unsigned short line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdi_stroke_triangle(HDC dc, short x0, short y0, short x1, short y1, short x2, short y2, unsigned short line_thickness, struct nk_color col) -> void #<nuklear_gdi.c>
nk_gdifont _type_ #<nuklear.h>
nk_gdifont_create(const char* name, int size) -> NK_API nk_gdifont #<nuklear.h>
nk_gdifont_create(const char* name, int size) -> nk_gdifont #<nuklear_gdi.c>
nk_gdifont_del(nk_gdifont font) -> NK_API void #<nuklear.h>
nk_gdifont_del(nk_gdifont font) -> void #<nuklear_gdi.c>
nk_gdifont_get_text_width(nk_handle handle, float height, const char* text, int len) -> float #<nuklear_gdi.c>
nk_get_null_rect(void) -> NK_API struct nk_rect #<nuklear.h>
nk_glyph _type_ #<nuklear.h>
nk_group_begin(struct nk_context*, const char* title, nk_flags) -> NK_API int #<nuklear.h>
nk_group_begin_titled(struct nk_context*, const char* name, const char* title, nk_flags) -> NK_API int #<nuklear.h>
nk_group_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_group_get_scroll(struct nk_context*, const char* id, nk_uint* x_offset, nk_uint* y_offset) -> NK_API void #<nuklear.h>
nk_group_scrolled_begin(struct nk_context*, struct nk_scroll* off, const char* title, nk_flags) -> NK_API int #<nuklear.h>
nk_group_scrolled_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_group_scrolled_offset_begin(struct nk_context*, nk_uint* x_offset, nk_uint* y_offset, const char* title, nk_flags flags) -> NK_API int #<nuklear.h>
nk_group_set_scroll(struct nk_context*, const char* id, nk_uint x_offset, nk_uint y_offset) -> NK_API void #<nuklear.h>
nk_handle :  #<nuklear.h>
nk_handle_id(int) -> NK_API nk_handle #<nuklear.h>
nk_handle_ptr(void*) -> NK_API nk_handle #<nuklear.h>
nk_hash _type_ #<nuklear.h>
nk_heading : enum #<nuklear.h>
nk_hsv(int h, int s, int v) -> NK_API struct nk_color #<nuklear.h>
nk_hsv_bv(const nk_byte* hsv) -> NK_API struct nk_color #<nuklear.h>
nk_hsv_f(float h, float s, float v) -> NK_API struct nk_color #<nuklear.h>
nk_hsv_fv(const float* hsv) -> NK_API struct nk_color #<nuklear.h>
nk_hsv_iv(const int* hsv) -> NK_API struct nk_color #<nuklear.h>
nk_hsva(int h, int s, int v, int a) -> NK_API struct nk_color #<nuklear.h>
nk_hsva_bv(const nk_byte* hsva) -> NK_API struct nk_color #<nuklear.h>
nk_hsva_colorf(float h, float s, float v, float a) -> NK_API struct nk_colorf #<nuklear.h>
nk_hsva_colorfv(float* c) -> NK_API struct nk_colorf #<nuklear.h>
nk_hsva_f(float h, float s, float v, float a) -> NK_API struct nk_color #<nuklear.h>
nk_hsva_fv(const float* hsva) -> NK_API struct nk_color #<nuklear.h>
nk_hsva_iv(const int* hsva) -> NK_API struct nk_color #<nuklear.h>
nk_image(struct nk_context*, struct nk_image) -> NK_API void #<nuklear.h>
nk_image_color(struct nk_context*, struct nk_image, struct nk_color) -> NK_API void #<nuklear.h>
nk_image_handle : NK_API struct nk_image #<nuklear.h>
nk_image_id(int) -> NK_API struct nk_image #<nuklear.h>
nk_image_is_subimage(const struct nk_image* img) -> NK_API int #<nuklear.h>
nk_image_ptr(void*) -> NK_API struct nk_image #<nuklear.h>
nk_init(struct nk_context*, struct nk_allocator*, const struct nk_user_font*) -> NK_API int #<nuklear.h>
nk_init_custom(struct nk_context*, struct nk_buffer* cmds, struct nk_buffer* pool, const struct nk_user_font*) -> NK_API int #<nuklear.h>
nk_init_default(struct nk_context*, const struct nk_user_font*) -> NK_API int #<nuklear.h>
nk_init_fixed(struct nk_context*, void* memory, nk_size size, const struct nk_user_font*) -> NK_API int #<nuklear.h>
nk_input_any_mouse_click_in_rect(const struct nk_input*, struct nk_rect) -> NK_API int #<nuklear.h>
nk_input_begin(struct nk_context*) -> NK_API void #<nuklear.h>
nk_input_button(struct nk_context*, enum nk_buttons, int x, int y, int down) -> NK_API void #<nuklear.h>
nk_input_char(struct nk_context*, char) -> NK_API void #<nuklear.h>
nk_input_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_input_glyph(struct nk_context*, const nk_glyph) -> NK_API void #<nuklear.h>
nk_input_has_mouse_click(const struct nk_input*, enum nk_buttons) -> NK_API int #<nuklear.h>
nk_input_has_mouse_click_down_in_rect(const struct nk_input*, enum nk_buttons, struct nk_rect, int down) -> NK_API int #<nuklear.h>
nk_input_has_mouse_click_in_rect(const struct nk_input*, enum nk_buttons, struct nk_rect) -> NK_API int #<nuklear.h>
nk_input_is_key_down(const struct nk_input*, enum nk_keys) -> NK_API int #<nuklear.h>
nk_input_is_key_pressed(const struct nk_input*, enum nk_keys) -> NK_API int #<nuklear.h>
nk_input_is_key_released(const struct nk_input*, enum nk_keys) -> NK_API int #<nuklear.h>
nk_input_is_mouse_click_down_in_rect(const struct nk_input* i, enum nk_buttons id, struct nk_rect b, int down) -> NK_API int #<nuklear.h>
nk_input_is_mouse_click_in_rect(const struct nk_input*, enum nk_buttons, struct nk_rect) -> NK_API int #<nuklear.h>
nk_input_is_mouse_down(const struct nk_input*, enum nk_buttons) -> NK_API int #<nuklear.h>
nk_input_is_mouse_hovering_rect(const struct nk_input*, struct nk_rect) -> NK_API int #<nuklear.h>
nk_input_is_mouse_pressed(const struct nk_input*, enum nk_buttons) -> NK_API int #<nuklear.h>
nk_input_is_mouse_prev_hovering_rect(const struct nk_input*, struct nk_rect) -> NK_API int #<nuklear.h>
nk_input_is_mouse_released(const struct nk_input*, enum nk_buttons) -> NK_API int #<nuklear.h>
nk_input_key(struct nk_context*, enum nk_keys, int down) -> NK_API void #<nuklear.h>
nk_input_motion(struct nk_context*, int x, int y) -> NK_API void #<nuklear.h>
nk_input_mouse_clicked(const struct nk_input*, enum nk_buttons, struct nk_rect) -> NK_API int #<nuklear.h>
nk_input_scroll(struct nk_context*, struct nk_vec2 val) -> NK_API void #<nuklear.h>
nk_input_unicode(struct nk_context*, nk_rune) -> NK_API void #<nuklear.h>
nk_int _type_ #<nuklear.h>
nk_item_is_any_active(struct nk_context*) -> NK_API int #<nuklear.h>
nk_keys : enum #<nuklear.h>
nk_label(struct nk_context*, const char*, nk_flags align) -> NK_API void #<nuklear.h>
nk_label_colored(struct nk_context*, const char*, nk_flags align, struct nk_color) -> NK_API void #<nuklear.h>
nk_label_colored_wrap(struct nk_context*, const char*, struct nk_color) -> NK_API void #<nuklear.h>
nk_label_wrap(struct nk_context*, const char*) -> NK_API void #<nuklear.h>
nk_labelf(struct nk_context*, nk_flags, NK_PRINTF_FORMAT_STRING const char*, ...) -> NK_API void #<nuklear.h>
nk_labelf_colored(struct nk_context*, nk_flags, struct nk_color, NK_PRINTF_FORMAT_STRING const char*, ...) -> NK_API void #<nuklear.h>
nk_labelf_colored_wrap(struct nk_context*, struct nk_color, NK_PRINTF_FORMAT_STRING const char*, ...) -> NK_API void #<nuklear.h>
nk_labelf_wrap(struct nk_context*, NK_PRINTF_FORMAT_STRING const char*, ...) -> NK_API void #<nuklear.h>
nk_labelfv(struct nk_context*, nk_flags, NK_PRINTF_FORMAT_STRING const char*, va_list) -> NK_API void #<nuklear.h>
nk_labelfv_colored(struct nk_context*, nk_flags, struct nk_color, NK_PRINTF_FORMAT_STRING const char*, va_list) -> NK_API void #<nuklear.h>
nk_labelfv_colored_wrap(struct nk_context*, struct nk_color, NK_PRINTF_FORMAT_STRING const char*, va_list) -> NK_API void #<nuklear.h>
nk_labelfv_wrap(struct nk_context*, NK_PRINTF_FORMAT_STRING const char*, va_list) -> NK_API void #<nuklear.h>
nk_layout_format : enum #<nuklear.h>
nk_layout_ratio_from_pixel(struct nk_context*, float pixel_width) -> NK_API float #<nuklear.h>
nk_layout_reset_min_row_height(struct nk_context*) -> NK_API void #<nuklear.h>
nk_layout_row(struct nk_context*, enum nk_layout_format, float height, int cols, const float* ratio) -> NK_API void #<nuklear.h>
nk_layout_row_begin(struct nk_context* ctx, enum nk_layout_format fmt, float row_height, int cols) -> NK_API void #<nuklear.h>
nk_layout_row_dynamic(struct nk_context* ctx, float height, int cols) -> NK_API void #<nuklear.h>
nk_layout_row_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_layout_row_push(struct nk_context*, float value) -> NK_API void #<nuklear.h>
nk_layout_row_static(struct nk_context* ctx, float height, int item_width, int cols) -> NK_API void #<nuklear.h>
nk_layout_row_template_begin(struct nk_context*, float row_height) -> NK_API void #<nuklear.h>
nk_layout_row_template_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_layout_row_template_push_dynamic(struct nk_context*) -> NK_API void #<nuklear.h>
nk_layout_row_template_push_static(struct nk_context*, float width) -> NK_API void #<nuklear.h>
nk_layout_row_template_push_variable(struct nk_context*, float min_width) -> NK_API void #<nuklear.h>
nk_layout_set_min_row_height(struct nk_context*, float height) -> NK_API void #<nuklear.h>
nk_layout_space_begin(struct nk_context*, enum nk_layout_format, float height, int widget_count) -> NK_API void #<nuklear.h>
nk_layout_space_bounds(struct nk_context*) -> NK_API struct nk_rect #<nuklear.h>
nk_layout_space_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_layout_space_push(struct nk_context*, struct nk_rect bounds) -> NK_API void #<nuklear.h>
nk_layout_space_rect_to_local(struct nk_context*, struct nk_rect) -> NK_API struct nk_rect #<nuklear.h>
nk_layout_space_rect_to_screen(struct nk_context*, struct nk_rect) -> NK_API struct nk_rect #<nuklear.h>
nk_layout_space_to_local(struct nk_context*, struct nk_vec2) -> NK_API struct nk_vec2 #<nuklear.h>
nk_layout_space_to_screen(struct nk_context*, struct nk_vec2) -> NK_API struct nk_vec2 #<nuklear.h>
nk_layout_widget_bounds(struct nk_context*) -> NK_API struct nk_rect #<nuklear.h>
nk_list_view_begin(struct nk_context*, struct nk_list_view* out, const char* id, nk_flags, int row_height, int row_count) -> NK_API int #<nuklear.h>
nk_list_view_end(struct nk_list_view*) -> NK_API void #<nuklear.h>
nk_menu_begin_image(struct nk_context*, const char*, struct nk_image, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_image_label(struct nk_context*, const char*, nk_flags align, struct nk_image, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_image_text(struct nk_context*, const char*, int, nk_flags align, struct nk_image, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_label(struct nk_context*, const char*, nk_flags align, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_symbol(struct nk_context*, const char*, enum nk_symbol_type, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_symbol_label(struct nk_context*, const char*, nk_flags align, enum nk_symbol_type, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_symbol_text(struct nk_context*, const char*, int, nk_flags align, enum nk_symbol_type, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_begin_text(struct nk_context*, const char* title, int title_len, nk_flags align, struct nk_vec2 size) -> NK_API int #<nuklear.h>
nk_menu_close(struct nk_context*) -> NK_API void #<nuklear.h>
nk_menu_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_menu_item_image_label(struct nk_context*, struct nk_image, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_menu_item_image_text(struct nk_context*, struct nk_image, const char*, int len, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_menu_item_label(struct nk_context*, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_menu_item_symbol_label(struct nk_context*, enum nk_symbol_type, const char*, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_menu_item_symbol_text(struct nk_context*, enum nk_symbol_type, const char*, int, nk_flags alignment) -> NK_API int #<nuklear.h>
nk_menu_item_text(struct nk_context*, const char*, int, nk_flags align) -> NK_API int #<nuklear.h>
nk_menubar_begin(struct nk_context*) -> NK_API void #<nuklear.h>
nk_menubar_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_modify : enum #<nuklear.h>
nk_murmur_hash(const void* key, int len, nk_hash seed) -> NK_API nk_hash #<nuklear.h>
nk_option_label(struct nk_context*, const char*, int active) -> NK_API int #<nuklear.h>
nk_option_text(struct nk_context*, const char*, int, int active) -> NK_API int #<nuklear.h>
nk_orientation : enum #<nuklear.h>
nk_page_data : union #<nuklear.h>
nk_panel : struct #<nuklear.h>
nk_panel_flags : enum #<nuklear.h>
nk_panel_row_layout_type : enum #<nuklear.h>
nk_panel_set : enum #<nuklear.h>
nk_panel_type : enum #<nuklear.h>
nk_plot(struct nk_context*, enum nk_chart_type, const float* values, int count, int offset) -> NK_API void #<nuklear.h>
nk_plot_function(struct nk_context*, enum nk_chart_type, void* userdata, float(* value_getter)(void* user, int index), int count, int offset) -> NK_API void #<nuklear.h>
nk_plugin_alloc _type_ #<nuklear.h>
nk_plugin_copy _type_ #<nuklear.h>
nk_plugin_filter _type_ #<nuklear.h>
nk_plugin_free _type_ #<nuklear.h>
nk_plugin_paste _type_ #<nuklear.h>
nk_popup_begin(struct nk_context*, enum nk_popup_type, const char*, nk_flags, struct nk_rect bounds) -> NK_API int #<nuklear.h>
nk_popup_close(struct nk_context*) -> NK_API void #<nuklear.h>
nk_popup_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_popup_get_scroll(struct nk_context*, nk_uint* offset_x, nk_uint* offset_y) -> NK_API void #<nuklear.h>
nk_popup_set_scroll(struct nk_context*, nk_uint offset_x, nk_uint offset_y) -> NK_API void #<nuklear.h>
nk_popup_type : enum #<nuklear.h>
nk_prog(struct nk_context*, nk_size cur, nk_size max, int modifyable) -> NK_API nk_size #<nuklear.h>
nk_progress(struct nk_context*, nk_size* cur, nk_size max, int modifyable) -> NK_API int #<nuklear.h>
nk_property_double(struct nk_context*, const char* name, double min, double* val, double max, double step, float inc_per_pixel) -> NK_API void #<nuklear.h>
nk_property_float(struct nk_context*, const char* name, float min, float* val, float max, float step, float inc_per_pixel) -> NK_API void #<nuklear.h>
nk_property_int(struct nk_context*, const char* name, int min, int* val, int max, int step, float inc_per_pixel) -> NK_API void #<nuklear.h>
nk_propertyd(struct nk_context*, const char* name, double min, double val, double max, double step, float inc_per_pixel) -> NK_API double #<nuklear.h>
nk_propertyf(struct nk_context*, const char* name, float min, float val, float max, float step, float inc_per_pixel) -> NK_API float #<nuklear.h>
nk_propertyi(struct nk_context*, const char* name, int min, int val, int max, int step, float inc_per_pixel) -> NK_API int #<nuklear.h>
nk_ptr _type_ #<nuklear.h>
nk_ptr_add(t, p, i) #<nuklear.h>
nk_ptr_add_const(t, p, i) #<nuklear.h>
nk_push_custom(struct nk_command_buffer*, struct nk_rect, nk_command_custom_callback, nk_handle usr) -> NK_API void #<nuklear.h>
nk_push_scissor(struct nk_command_buffer*, struct nk_rect) -> NK_API void #<nuklear.h>
nk_query_font_glyph_f _type_ #<nuklear.h>
nk_radio_label(struct nk_context*, const char*, int* active) -> NK_API int #<nuklear.h>
nk_radio_text(struct nk_context*, const char*, int, int* active) -> NK_API int #<nuklear.h>
nk_rect(float x, float y, float w, float h) -> NK_API struct nk_rect #<nuklear.h>
nk_rect_pos(struct nk_rect) -> NK_API struct nk_vec2 #<nuklear.h>
nk_rect_size(struct nk_rect) -> NK_API struct nk_vec2 #<nuklear.h>
nk_recta(struct nk_vec2 pos, struct nk_vec2 size) -> NK_API struct nk_rect #<nuklear.h>
nk_recti(int x, int y, int w, int h) -> NK_API struct nk_rect #<nuklear.h>
nk_rectiv(const int* xywh) -> NK_API struct nk_rect #<nuklear.h>
nk_rectv(const float* xywh) -> NK_API struct nk_rect #<nuklear.h>
nk_rgb(int r, int g, int b) -> NK_API struct nk_color #<nuklear.h>
nk_rgb_bv(const nk_byte* rgb) -> NK_API struct nk_color #<nuklear.h>
nk_rgb_cf(struct nk_colorf c) -> NK_API struct nk_color #<nuklear.h>
nk_rgb_f(float r, float g, float b) -> NK_API struct nk_color #<nuklear.h>
nk_rgb_fv(const float* rgb) -> NK_API struct nk_color #<nuklear.h>
nk_rgb_hex(const char* rgb) -> NK_API struct nk_color #<nuklear.h>
nk_rgb_iv(const int* rgb) -> NK_API struct nk_color #<nuklear.h>
nk_rgba(int r, int g, int b, int a) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_bv(const nk_byte* rgba) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_cf(struct nk_colorf c) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_f(float r, float g, float b, float a) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_fv(const float* rgba) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_hex(const char* rgb) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_iv(const int* rgba) -> NK_API struct nk_color #<nuklear.h>
nk_rgba_u32(nk_uint) -> NK_API struct nk_color #<nuklear.h>
nk_rune _type_ #<nuklear.h>
nk_select_image_label(struct nk_context*, struct nk_image, const char*, nk_flags align, int value) -> NK_API int #<nuklear.h>
nk_select_image_text(struct nk_context*, struct nk_image, const char*, int, nk_flags align, int value) -> NK_API int #<nuklear.h>
nk_select_label(struct nk_context*, const char*, nk_flags align, int value) -> NK_API int #<nuklear.h>
nk_select_symbol_label(struct nk_context*, enum nk_symbol_type, const char*, nk_flags align, int value) -> NK_API int #<nuklear.h>
nk_select_symbol_text(struct nk_context*, enum nk_symbol_type, const char*, int, nk_flags align, int value) -> NK_API int #<nuklear.h>
nk_select_text(struct nk_context*, const char*, int, nk_flags align, int value) -> NK_API int #<nuklear.h>
nk_selectable_image_label(struct nk_context*, struct nk_image, const char*, nk_flags align, int* value) -> NK_API int #<nuklear.h>
nk_selectable_image_text(struct nk_context*, struct nk_image, const char*, int, nk_flags align, int* value) -> NK_API int #<nuklear.h>
nk_selectable_label(struct nk_context*, const char*, nk_flags align, int* value) -> NK_API int #<nuklear.h>
nk_selectable_symbol_label(struct nk_context*, enum nk_symbol_type, const char*, nk_flags align, int* value) -> NK_API int #<nuklear.h>
nk_selectable_symbol_text(struct nk_context*, enum nk_symbol_type, const char*, int, nk_flags align, int* value) -> NK_API int #<nuklear.h>
nk_selectable_text(struct nk_context*, const char*, int, nk_flags align, int* value) -> NK_API int #<nuklear.h>
nk_set_theme(struct nk_context* ctx, enum nk_theme theme) -> NK_API void #<nuklear.h>
nk_set_user_data(struct nk_context*, nk_handle handle) -> NK_API void #<nuklear.h>
nk_short _type_ #<nuklear.h>
nk_show_states : enum #<nuklear.h>
nk_size _type_ #<nuklear.h>
nk_slide_float(struct nk_context*, float min, float val, float max, float step) -> NK_API float #<nuklear.h>
nk_slide_int(struct nk_context*, int min, int val, int max, int step) -> NK_API int #<nuklear.h>
nk_slider_float(struct nk_context*, float min, float* val, float max, float step) -> NK_API int #<nuklear.h>
nk_slider_int(struct nk_context*, int min, int* val, int max, int step) -> NK_API int #<nuklear.h>
nk_spacing(struct nk_context*, int cols) -> NK_API void #<nuklear.h>
nk_str_append_str_char(struct nk_str*, const char*) -> NK_API int #<nuklear.h>
nk_str_append_str_runes(struct nk_str*, const nk_rune*) -> NK_API int #<nuklear.h>
nk_str_append_str_utf8(struct nk_str*, const char*) -> NK_API int #<nuklear.h>
nk_str_append_text_char(struct nk_str*, const char*, int) -> NK_API int #<nuklear.h>
nk_str_append_text_runes(struct nk_str*, const nk_rune*, int) -> NK_API int #<nuklear.h>
nk_str_append_text_utf8(struct nk_str*, const char*, int) -> NK_API int #<nuklear.h>
nk_str_at_char(struct nk_str*, int pos) -> NK_API char* #<nuklear.h>
nk_str_at_char_const(const struct nk_str*, int pos) -> NK_API const char* #<nuklear.h>
nk_str_at_const(const struct nk_str*, int pos, nk_rune* unicode, int* len) -> NK_API const char* #<nuklear.h>
nk_str_at_rune(struct nk_str*, int pos, nk_rune* unicode, int* len) -> NK_API char* #<nuklear.h>
nk_str_clear(struct nk_str*) -> NK_API void #<nuklear.h>
nk_str_delete_chars(struct nk_str*, int pos, int len) -> NK_API void #<nuklear.h>
nk_str_delete_runes(struct nk_str*, int pos, int len) -> NK_API void #<nuklear.h>
nk_str_free(struct nk_str*) -> NK_API void #<nuklear.h>
nk_str_get(struct nk_str*) -> NK_API char* #<nuklear.h>
nk_str_get_const(const struct nk_str*) -> NK_API const char* #<nuklear.h>
nk_str_init(struct nk_str*, const struct nk_allocator*, nk_size size) -> NK_API void #<nuklear.h>
nk_str_init_default(struct nk_str*) -> NK_API void #<nuklear.h>
nk_str_init_fixed(struct nk_str*, void* memory, nk_size size) -> NK_API void #<nuklear.h>
nk_str_insert_at_char(struct nk_str*, int pos, const char*, int) -> NK_API int #<nuklear.h>
nk_str_insert_at_rune(struct nk_str*, int pos, const char*, int) -> NK_API int #<nuklear.h>
nk_str_insert_str_char(struct nk_str*, int pos, const char*) -> NK_API int #<nuklear.h>
nk_str_insert_str_runes(struct nk_str*, int pos, const nk_rune*) -> NK_API int #<nuklear.h>
nk_str_insert_str_utf8(struct nk_str*, int pos, const char*) -> NK_API int #<nuklear.h>
nk_str_insert_text_char(struct nk_str*, int pos, const char*, int) -> NK_API int #<nuklear.h>
nk_str_insert_text_runes(struct nk_str*, int pos, const nk_rune*, int) -> NK_API int #<nuklear.h>
nk_str_insert_text_utf8(struct nk_str*, int pos, const char*, int) -> NK_API int #<nuklear.h>
nk_str_len(struct nk_str*) -> NK_API int #<nuklear.h>
nk_str_len_char(struct nk_str*) -> NK_API int #<nuklear.h>
nk_str_remove_chars(struct nk_str*, int len) -> NK_API void #<nuklear.h>
nk_str_remove_runes(struct nk_str* str, int len) -> NK_API void #<nuklear.h>
nk_str_rune_at(const struct nk_str*, int pos) -> NK_API nk_rune #<nuklear.h>
nk_strfilter(const char* text, const char* regexp) -> NK_API int #<nuklear.h>
nk_stricmp(const char* s1, const char* s2) -> NK_API int #<nuklear.h>
nk_stricmpn(const char* s1, const char* s2, int n) -> NK_API int #<nuklear.h>
nk_strlen(const char* str) -> NK_API int #<nuklear.h>
nk_strmatch_fuzzy_string(char const* str, char const* pattern, int* out_score) -> NK_API int #<nuklear.h>
nk_strmatch_fuzzy_text(const char* txt, int txt_len, const char* pattern, int* out_score) -> NK_API int #<nuklear.h>
nk_stroke_arc(struct nk_command_buffer*, float cx, float cy, float radius, float a_min, float a_max, float line_thickness, struct nk_color) -> NK_API void #<nuklear.h>
nk_stroke_circle(struct nk_command_buffer*, struct nk_rect, float line_thickness, struct nk_color) -> NK_API void #<nuklear.h>
nk_stroke_curve(struct nk_command_buffer*, float, float, float, float, float, float, float, float, float line_thickness, struct nk_color) -> NK_API void #<nuklear.h>
nk_stroke_line(struct nk_command_buffer* b, float x0, float y0, float x1, float y1, float line_thickness, struct nk_color) -> NK_API void #<nuklear.h>
nk_stroke_polygon(struct nk_command_buffer*, float*, int point_count, float line_thickness, struct nk_color) -> NK_API void #<nuklear.h>
nk_stroke_polyline(struct nk_command_buffer*, float* points, int point_count, float line_thickness, struct nk_color col) -> NK_API void #<nuklear.h>
nk_stroke_rect(struct nk_command_buffer*, struct nk_rect, float rounding, float line_thickness, struct nk_color) -> NK_API void #<nuklear.h>
nk_stroke_triangle(struct nk_command_buffer*, float, float, float, float, float, float, float line_thichness, struct nk_color) -> NK_API void #<nuklear.h>
nk_strtod(const char* str, const char** endptr) -> NK_API double #<nuklear.h>
nk_strtof(const char* str, const char** endptr) -> NK_API float #<nuklear.h>
nk_strtoi(const char* str, const char** endptr) -> NK_API int #<nuklear.h>
nk_style_button : struct #<nuklear.h>
nk_style_chart : struct #<nuklear.h>
nk_style_colors : enum #<nuklear.h>
nk_style_combo : struct #<nuklear.h>
nk_style_cursor : enum #<nuklear.h>
nk_style_default(struct nk_context*) -> NK_API void #<nuklear.h>
nk_style_edit : struct #<nuklear.h>
nk_style_from_table(struct nk_context*, const struct nk_color*) -> NK_API void #<nuklear.h>
nk_style_get_color_by_name(enum nk_style_colors) -> NK_API const char* #<nuklear.h>
nk_style_header_align : enum #<nuklear.h>
nk_style_hide_cursor(struct nk_context*) -> NK_API void #<nuklear.h>
nk_style_item : struct #<nuklear.h>
nk_style_item_color(struct nk_color) -> NK_API struct nk_style_item #<nuklear.h>
nk_style_item_data : union #<nuklear.h>
nk_style_item_hide(void) -> NK_API struct nk_style_item #<nuklear.h>
nk_style_item_image(struct nk_image img) -> NK_API struct nk_style_item #<nuklear.h>
nk_style_item_type : enum #<nuklear.h>
nk_style_load_all_cursors(struct nk_context*, struct nk_cursor*) -> NK_API void #<nuklear.h>
nk_style_load_cursor(struct nk_context*, enum nk_style_cursor, const struct nk_cursor*) -> NK_API void #<nuklear.h>
nk_style_pop_color(struct nk_context*) -> NK_API int #<nuklear.h>
nk_style_pop_flags(struct nk_context*) -> NK_API int #<nuklear.h>
nk_style_pop_float(struct nk_context*) -> NK_API int #<nuklear.h>
nk_style_pop_font(struct nk_context*) -> NK_API int #<nuklear.h>
nk_style_pop_style_item(struct nk_context*) -> NK_API int #<nuklear.h>
nk_style_pop_vec2(struct nk_context*) -> NK_API int #<nuklear.h>
nk_style_progress : struct #<nuklear.h>
nk_style_property : struct #<nuklear.h>
nk_style_push_color(struct nk_context*, struct nk_color*, struct nk_color) -> NK_API int #<nuklear.h>
nk_style_push_flags(struct nk_context*, nk_flags*, nk_flags) -> NK_API int #<nuklear.h>
nk_style_push_float(struct nk_context*, float*, float) -> NK_API int #<nuklear.h>
nk_style_push_font(struct nk_context*, const struct nk_user_font*) -> NK_API int #<nuklear.h>
nk_style_push_style_item(struct nk_context*, struct nk_style_item*, struct nk_style_item) -> NK_API int #<nuklear.h>
nk_style_push_vec2(struct nk_context*, struct nk_vec2*, struct nk_vec2) -> NK_API int #<nuklear.h>
nk_style_scrollbar : struct #<nuklear.h>
nk_style_selectable : struct #<nuklear.h>
nk_style_set_cursor(struct nk_context*, enum nk_style_cursor) -> NK_API int #<nuklear.h>
nk_style_set_font(struct nk_context*, const struct nk_user_font*) -> NK_API void #<nuklear.h>
nk_style_show_cursor(struct nk_context*) -> NK_API void #<nuklear.h>
nk_style_slide : struct #<nuklear.h>
nk_style_tab : struct #<nuklear.h>
nk_style_toggle : struct #<nuklear.h>
nk_style_window : struct #<nuklear.h>
nk_style_window_header : struct #<nuklear.h>
nk_subimage_handle : NK_API struct nk_image #<nuklear.h>
nk_subimage_id(int, unsigned short w, unsigned short h, struct nk_rect sub_region) -> NK_API struct nk_image #<nuklear.h>
nk_subimage_ptr(void*, unsigned short w, unsigned short h, struct nk_rect sub_region) -> NK_API struct nk_image #<nuklear.h>
nk_symbol_type : enum #<nuklear.h>
nk_table : struct #<nuklear.h>
nk_text(struct nk_context*, const char*, int, nk_flags) -> NK_API void #<nuklear.h>
nk_text_align : enum #<nuklear.h>
nk_text_alignment : enum #<nuklear.h>
nk_text_colored(struct nk_context*, const char*, int, nk_flags, struct nk_color) -> NK_API void #<nuklear.h>
nk_text_edit : struct #<nuklear.h>
nk_text_edit_mode : enum #<nuklear.h>
nk_text_edit_type : enum #<nuklear.h>
nk_text_width_f _type_ #<nuklear.h>
nk_text_wrap(struct nk_context*, const char*, int) -> NK_API void #<nuklear.h>
nk_text_wrap_colored(struct nk_context*, const char*, int, struct nk_color) -> NK_API void #<nuklear.h>
nk_textedit_cut(struct nk_text_edit*) -> NK_API int #<nuklear.h>
nk_textedit_delete(struct nk_text_edit*, int where, int len) -> NK_API void #<nuklear.h>
nk_textedit_delete_selection(struct nk_text_edit*) -> NK_API void #<nuklear.h>
nk_textedit_free(struct nk_text_edit*) -> NK_API void #<nuklear.h>
nk_textedit_init(struct nk_text_edit*, struct nk_allocator*, nk_size size) -> NK_API void #<nuklear.h>
nk_textedit_init_default(struct nk_text_edit*) -> NK_API void #<nuklear.h>
nk_textedit_init_fixed(struct nk_text_edit*, void* memory, nk_size size) -> NK_API void #<nuklear.h>
nk_textedit_paste(struct nk_text_edit*, char const*, int len) -> NK_API int #<nuklear.h>
nk_textedit_redo(struct nk_text_edit*) -> NK_API void #<nuklear.h>
nk_textedit_select_all(struct nk_text_edit*) -> NK_API void #<nuklear.h>
nk_textedit_text(struct nk_text_edit*, const char*, int total_len) -> NK_API void #<nuklear.h>
nk_textedit_undo(struct nk_text_edit*) -> NK_API void #<nuklear.h>
nk_theme : enum #<nuklear.h>
nk_tooltip(struct nk_context*, const char*) -> NK_API void #<nuklear.h>
nk_tooltip_begin(struct nk_context*, float width) -> NK_API int #<nuklear.h>
nk_tooltip_end(struct nk_context*) -> NK_API void #<nuklear.h>
nk_tooltipf(struct nk_context*, NK_PRINTF_FORMAT_STRING const char*, ...) -> NK_API void #<nuklear.h>
nk_tooltipfv(struct nk_context*, NK_PRINTF_FORMAT_STRING const char*, va_list) -> NK_API void #<nuklear.h>
nk_tree_element_image_push_hashed(struct nk_context*, enum nk_tree_type, struct nk_image, const char* title, enum nk_collapse_states initial_state, int* selected, const char* hash, int len, int seed) -> NK_API int #<nuklear.h>
nk_tree_element_pop(struct nk_context*) -> NK_API void #<nuklear.h>
nk_tree_element_push(ctx, type, title, state, sel) #<nuklear.h>
nk_tree_element_push_hashed(struct nk_context*, enum nk_tree_type, const char* title, enum nk_collapse_states initial_state, int* selected, const char* hash, int len, int seed) -> NK_API int #<nuklear.h>
nk_tree_element_push_id(ctx, type, title, state, sel, id) #<nuklear.h>
nk_tree_image_push(ctx, type, img, title, state) #<nuklear.h>
nk_tree_image_push_hashed(struct nk_context*, enum nk_tree_type, struct nk_image, const char* title, enum nk_collapse_states initial_state, const char* hash, int len, int seed) -> NK_API int #<nuklear.h>
nk_tree_image_push_id(ctx, type, img, title, state, id) #<nuklear.h>
nk_tree_pop(struct nk_context*) -> NK_API void #<nuklear.h>
nk_tree_push(ctx, type, title, state) #<nuklear.h>
nk_tree_push_hashed(struct nk_context*, enum nk_tree_type, const char* title, enum nk_collapse_states initial_state, const char* hash, int len, int seed) -> NK_API int #<nuklear.h>
nk_tree_push_id(ctx, type, title, state, id) #<nuklear.h>
nk_tree_state_image_push(struct nk_context*, enum nk_tree_type, struct nk_image, const char* title, enum nk_collapse_states* state) -> NK_API int #<nuklear.h>
nk_tree_state_pop(struct nk_context*) -> NK_API void #<nuklear.h>
nk_tree_state_push(struct nk_context*, enum nk_tree_type, const char* title, enum nk_collapse_states* state) -> NK_API int #<nuklear.h>
nk_tree_type : enum #<nuklear.h>
nk_triangle_from_direction(struct nk_vec2* result, struct nk_rect r, float pad_x, float pad_y, enum nk_heading) -> NK_API void #<nuklear.h>
nk_uchar _type_ #<nuklear.h>
nk_uint _type_ #<nuklear.h>
nk_user_font : struct #<nuklear.h>
nk_user_font_glyph : struct #<nuklear.h>
nk_ushort _type_ #<nuklear.h>
nk_utf_at(const char* buffer, int length, int index, nk_rune* unicode, int* len) -> NK_API const char* #<nuklear.h>
nk_utf_decode(const char*, nk_rune*, int) -> NK_API int #<nuklear.h>
nk_utf_encode(nk_rune, char*, int) -> NK_API int #<nuklear.h>
nk_utf_len(const char*, int byte_len) -> NK_API int #<nuklear.h>
nk_utf_mode : nk_byte #<nuklear.h>
nk_value_bool(struct nk_context*, const char* prefix, int) -> NK_API void #<nuklear.h>
nk_value_color_byte(struct nk_context*, const char* prefix, struct nk_color) -> NK_API void #<nuklear.h>
nk_value_color_float(struct nk_context*, const char* prefix, struct nk_color) -> NK_API void #<nuklear.h>
nk_value_color_hex(struct nk_context*, const char* prefix, struct nk_color) -> NK_API void #<nuklear.h>
nk_value_float(struct nk_context*, const char* prefix, float) -> NK_API void #<nuklear.h>
nk_value_int(struct nk_context*, const char* prefix, int) -> NK_API void #<nuklear.h>
nk_value_uint(struct nk_context*, const char* prefix, unsigned int) -> NK_API void #<nuklear.h>
nk_vec2(float x, float y) -> NK_API struct nk_vec2 #<nuklear.h>
nk_vec2_add(a, b) #<nuklear.h>
nk_vec2_len_sqr(a) #<nuklear.h>
nk_vec2_muls(a, t) #<nuklear.h>
nk_vec2_sub(a, b) #<nuklear.h>
nk_vec2i(int x, int y) -> NK_API struct nk_vec2 #<nuklear.h>
nk_vec2iv(const int* xy) -> NK_API struct nk_vec2 #<nuklear.h>
nk_vec2v(const float* xy) -> NK_API struct nk_vec2 #<nuklear.h>
nk_widget(struct nk_rect*, const struct nk_context*) -> NK_API enum nk_widget_layout_states #<nuklear.h>
nk_widget_bounds(struct nk_context*) -> NK_API struct nk_rect #<nuklear.h>
nk_widget_fitting(struct nk_rect*, struct nk_context*, struct nk_vec2) -> NK_API enum nk_widget_layout_states #<nuklear.h>
nk_widget_has_mouse_click_down(struct nk_context*, enum nk_buttons, int down) -> NK_API int #<nuklear.h>
nk_widget_height(struct nk_context*) -> NK_API float #<nuklear.h>
nk_widget_is_hovered(struct nk_context*) -> NK_API int #<nuklear.h>
nk_widget_is_mouse_clicked(struct nk_context*, enum nk_buttons) -> NK_API int #<nuklear.h>
nk_widget_layout_states : enum #<nuklear.h>
nk_widget_position(struct nk_context*) -> NK_API struct nk_vec2 #<nuklear.h>
nk_widget_size(struct nk_context*) -> NK_API struct nk_vec2 #<nuklear.h>
nk_widget_states : enum #<nuklear.h>
nk_widget_width(struct nk_context*) -> NK_API float #<nuklear.h>
nk_window_close(struct nk_context* ctx, const char* name) -> NK_API void #<nuklear.h>
nk_window_collapse(struct nk_context*, const char* name, enum nk_collapse_states state) -> NK_API void #<nuklear.h>
nk_window_collapse_if(struct nk_context*, const char* name, enum nk_collapse_states, int cond) -> NK_API void #<nuklear.h>
nk_window_find(struct nk_context* ctx, const char* name) -> NK_API struct nk_window* #<nuklear.h>
nk_window_flags : enum #<nuklear.h>
nk_window_get_bounds(const struct nk_context* ctx) -> NK_API struct nk_rect #<nuklear.h>
nk_window_get_canvas(struct nk_context*) -> NK_API struct nk_command_buffer* #<nuklear.h>
nk_window_get_content_region(struct nk_context*) -> NK_API struct nk_rect #<nuklear.h>
nk_window_get_content_region_max(struct nk_context*) -> NK_API struct nk_vec2 #<nuklear.h>
nk_window_get_content_region_min(struct nk_context*) -> NK_API struct nk_vec2 #<nuklear.h>
nk_window_get_content_region_size(struct nk_context*) -> NK_API struct nk_vec2 #<nuklear.h>
nk_window_get_height(const struct nk_context*) -> NK_API float #<nuklear.h>
nk_window_get_panel(struct nk_context*) -> NK_API struct nk_panel* #<nuklear.h>
nk_window_get_position(const struct nk_context* ctx) -> NK_API struct nk_vec2 #<nuklear.h>
nk_window_get_scroll(struct nk_context*, nk_uint* offset_x, nk_uint* offset_y) -> NK_API void #<nuklear.h>
nk_window_get_size(const struct nk_context*) -> NK_API struct nk_vec2 #<nuklear.h>
nk_window_get_width(const struct nk_context*) -> NK_API float #<nuklear.h>
nk_window_has_focus(const struct nk_context*) -> NK_API int #<nuklear.h>
nk_window_is_active(struct nk_context*, const char*) -> NK_API int #<nuklear.h>
nk_window_is_any_hovered(struct nk_context*) -> NK_API int #<nuklear.h>
nk_window_is_closed(struct nk_context*, const char*) -> NK_API int #<nuklear.h>
nk_window_is_collapsed(struct nk_context* ctx, const char* name) -> NK_API int #<nuklear.h>
nk_window_is_hidden(struct nk_context*, const char*) -> NK_API int #<nuklear.h>
nk_window_is_hovered(struct nk_context*) -> NK_API int #<nuklear.h>
nk_window_set_bounds(struct nk_context*, const char* name, struct nk_rect bounds) -> NK_API void #<nuklear.h>
nk_window_set_focus(struct nk_context*, const char* name) -> NK_API void #<nuklear.h>
nk_window_set_position(struct nk_context*, const char* name, struct nk_vec2 pos) -> NK_API void #<nuklear.h>
nk_window_set_scroll(struct nk_context*, nk_uint offset_x, nk_uint offset_y) -> NK_API void #<nuklear.h>
nk_window_set_size(struct nk_context*, const char* name, struct nk_vec2) -> NK_API void #<nuklear.h>
nk_window_show(struct nk_context*, const char* name, enum nk_show_states) -> NK_API void #<nuklear.h>
nk_window_show_if(struct nk_context*, const char* name, enum nk_show_states, int cond) -> NK_API void #<nuklear.h>
nk_zero_struct(s) #<nuklear.h>
nu : double #<main.c>
page : enum #<main.c>
ptr _type_ #<nuklear.h>
real_time : double #<main.c>
running : int #<main.c>
v_KmH : int #<main.c>
wc : WNDCLASS #<nuklear_gdi.c>
window_dc : HDC #<nuklear_gdi.c>
wnd : HWND #<nuklear_gdi.c>
	Car::want_v : double #<main.c>
	Car::v : double #<main.c>
	Car::x : double #<main.c>
	Car::t_brake : double #<main.c>
	Car::status : int #<main.c>
	GdiFont::nk : struct nk_user_font #<nuklear_gdi.c>
	GdiFont::height : int #<nuklear_gdi.c>
	GdiFont::handle : HFONT #<nuklear_gdi.c>
	GdiFont::dc : HDC #<nuklear_gdi.c>
	nk_allocator::userdata : nk_handle #<nuklear.h>
	nk_allocator::alloc : nk_plugin_alloc #<nuklear.h>
	nk_allocator::free : nk_plugin_free #<nuklear.h>
	nk_baked_font::height : float #<nuklear.h>
	nk_baked_font::ascent : float #<nuklear.h>
	nk_baked_font::descent : float #<nuklear.h>
	nk_baked_font::glyph_offset : nk_rune #<nuklear.h>
	nk_baked_font::glyph_count : nk_rune #<nuklear.h>
	nk_baked_font::ranges : const nk_rune* #<nuklear.h>
	nk_buffer::marker : struct nk_buffer_marker[] #<nuklear.h>
	nk_buffer::pool : struct nk_allocator #<nuklear.h>
	nk_buffer::type : enum nk_allocation_type #<nuklear.h>
	nk_buffer::memory : struct nk_memory #<nuklear.h>
	nk_buffer::grow_factor : float #<nuklear.h>
	nk_buffer::allocated : nk_size #<nuklear.h>
	nk_buffer::needed : nk_size #<nuklear.h>
	nk_buffer::calls : nk_size #<nuklear.h>
	nk_buffer::size : nk_size #<nuklear.h>
	nk_buffer_marker::active : int #<nuklear.h>
	nk_buffer_marker::offset : nk_size #<nuklear.h>
	nk_canvas::painter : struct nk_command_buffer* #<main.c>
	nk_canvas::item_spacing : struct nk_vec2 #<main.c>
	nk_canvas::panel_padding : struct nk_vec2 #<main.c>
	nk_canvas::window_background : struct nk_style_item #<main.c>
	nk_chart::slot : int #<nuklear.h>
	nk_chart::x : float #<nuklear.h>
	nk_chart::y : float #<nuklear.h>
	nk_chart::w : float #<nuklear.h>
	nk_chart::h : float #<nuklear.h>
	nk_chart::slots : struct nk_chart_slot[] #<nuklear.h>
	nk_chart_slot::type : enum nk_chart_type #<nuklear.h>
	nk_chart_slot::color : struct nk_color #<nuklear.h>
	nk_chart_slot::highlight : struct nk_color #<nuklear.h>
	nk_chart_slot::min : float #<nuklear.h>
	nk_chart_slot::max : float #<nuklear.h>
	nk_chart_slot::range : float #<nuklear.h>
	nk_chart_slot::count : int #<nuklear.h>
	nk_chart_slot::last : struct nk_vec2 #<nuklear.h>
	nk_chart_slot::index : int #<nuklear.h>
	nk_clipboard::userdata : nk_handle #<nuklear.h>
	nk_clipboard::paste : nk_plugin_paste #<nuklear.h>
	nk_clipboard::copy : nk_plugin_copy #<nuklear.h>
	nk_color::r : nk_byte #<nuklear.h>
	nk_color::g : nk_byte #<nuklear.h>
	nk_color::b : nk_byte #<nuklear.h>
	nk_color::a : nk_byte #<nuklear.h>
	nk_colorf::r : float #<nuklear.h>
	nk_colorf::g : float #<nuklear.h>
	nk_colorf::b : float #<nuklear.h>
	nk_colorf::a : float #<nuklear.h>
	nk_command::type : enum nk_command_type #<nuklear.h>
	nk_command::next : nk_size #<nuklear.h>
	nk_command::userdata : nk_handle #<nuklear.h>
	nk_command_arc::header : struct nk_command #<nuklear.h>
	nk_command_arc::cx : short #<nuklear.h>
	nk_command_arc::cy : short #<nuklear.h>
	nk_command_arc::r : unsigned short #<nuklear.h>
	nk_command_arc::line_thickness : unsigned short #<nuklear.h>
	nk_command_arc::a : float[] #<nuklear.h>
	nk_command_arc::color : struct nk_color #<nuklear.h>
	nk_command_arc_filled::header : struct nk_command #<nuklear.h>
	nk_command_arc_filled::cx : short #<nuklear.h>
	nk_command_arc_filled::cy : short #<nuklear.h>
	nk_command_arc_filled::r : unsigned short #<nuklear.h>
	nk_command_arc_filled::a : float[] #<nuklear.h>
	nk_command_arc_filled::color : struct nk_color #<nuklear.h>
	nk_command_buffer::base : struct nk_buffer* #<nuklear.h>
	nk_command_buffer::clip : struct nk_rect #<nuklear.h>
	nk_command_buffer::use_clipping : int #<nuklear.h>
	nk_command_buffer::userdata : nk_handle #<nuklear.h>
	nk_command_buffer::begin : nk_size #<nuklear.h>
	nk_command_buffer::end : nk_size #<nuklear.h>
	nk_command_buffer::last : nk_size #<nuklear.h>
	nk_command_circle::header : struct nk_command #<nuklear.h>
	nk_command_circle::x : short #<nuklear.h>
	nk_command_circle::y : short #<nuklear.h>
	nk_command_circle::line_thickness : unsigned short #<nuklear.h>
	nk_command_circle::w : unsigned short #<nuklear.h>
	nk_command_circle::h : unsigned short #<nuklear.h>
	nk_command_circle::color : struct nk_color #<nuklear.h>
	nk_command_circle_filled::header : struct nk_command #<nuklear.h>
	nk_command_circle_filled::x : short #<nuklear.h>
	nk_command_circle_filled::y : short #<nuklear.h>
	nk_command_circle_filled::w : unsigned short #<nuklear.h>
	nk_command_circle_filled::h : unsigned short #<nuklear.h>
	nk_command_circle_filled::color : struct nk_color #<nuklear.h>
	nk_command_curve::header : struct nk_command #<nuklear.h>
	nk_command_curve::line_thickness : unsigned short #<nuklear.h>
	nk_command_curve::begin : struct nk_vec2i #<nuklear.h>
	nk_command_curve::end : struct nk_vec2i #<nuklear.h>
	nk_command_curve::ctrl : struct nk_vec2i[] #<nuklear.h>
	nk_command_curve::color : struct nk_color #<nuklear.h>
	nk_command_custom::header : struct nk_command #<nuklear.h>
	nk_command_custom::x : short #<nuklear.h>
	nk_command_custom::y : short #<nuklear.h>
	nk_command_custom::w : unsigned short #<nuklear.h>
	nk_command_custom::h : unsigned short #<nuklear.h>
	nk_command_custom::callback_data : nk_handle #<nuklear.h>
	nk_command_custom::callback : nk_command_custom_callback #<nuklear.h>
	nk_command_image::header : struct nk_command #<nuklear.h>
	nk_command_image::x : short #<nuklear.h>
	nk_command_image::y : short #<nuklear.h>
	nk_command_image::w : unsigned short #<nuklear.h>
	nk_command_image::h : unsigned short #<nuklear.h>
	nk_command_image::img : struct nk_image #<nuklear.h>
	nk_command_image::col : struct nk_color #<nuklear.h>
	nk_command_line::header : struct nk_command #<nuklear.h>
	nk_command_line::line_thickness : unsigned short #<nuklear.h>
	nk_command_line::begin : struct nk_vec2i #<nuklear.h>
	nk_command_line::end : struct nk_vec2i #<nuklear.h>
	nk_command_line::color : struct nk_color #<nuklear.h>
	nk_command_polygon::header : struct nk_command #<nuklear.h>
	nk_command_polygon::color : struct nk_color #<nuklear.h>
	nk_command_polygon::line_thickness : unsigned short #<nuklear.h>
	nk_command_polygon::point_count : unsigned short #<nuklear.h>
	nk_command_polygon::points : struct nk_vec2i[] #<nuklear.h>
	nk_command_polygon_filled::header : struct nk_command #<nuklear.h>
	nk_command_polygon_filled::color : struct nk_color #<nuklear.h>
	nk_command_polygon_filled::point_count : unsigned short #<nuklear.h>
	nk_command_polygon_filled::points : struct nk_vec2i[] #<nuklear.h>
	nk_command_polyline::header : struct nk_command #<nuklear.h>
	nk_command_polyline::color : struct nk_color #<nuklear.h>
	nk_command_polyline::line_thickness : unsigned short #<nuklear.h>
	nk_command_polyline::point_count : unsigned short #<nuklear.h>
	nk_command_polyline::points : struct nk_vec2i[] #<nuklear.h>
	nk_command_rect::header : struct nk_command #<nuklear.h>
	nk_command_rect::rounding : unsigned short #<nuklear.h>
	nk_command_rect::line_thickness : unsigned short #<nuklear.h>
	nk_command_rect::x : short #<nuklear.h>
	nk_command_rect::y : short #<nuklear.h>
	nk_command_rect::w : unsigned short #<nuklear.h>
	nk_command_rect::h : unsigned short #<nuklear.h>
	nk_command_rect::color : struct nk_color #<nuklear.h>
	nk_command_rect_filled::header : struct nk_command #<nuklear.h>
	nk_command_rect_filled::rounding : unsigned short #<nuklear.h>
	nk_command_rect_filled::x : short #<nuklear.h>
	nk_command_rect_filled::y : short #<nuklear.h>
	nk_command_rect_filled::w : unsigned short #<nuklear.h>
	nk_command_rect_filled::h : unsigned short #<nuklear.h>
	nk_command_rect_filled::color : struct nk_color #<nuklear.h>
	nk_command_rect_multi_color::header : struct nk_command #<nuklear.h>
	nk_command_rect_multi_color::x : short #<nuklear.h>
	nk_command_rect_multi_color::y : short #<nuklear.h>
	nk_command_rect_multi_color::w : unsigned short #<nuklear.h>
	nk_command_rect_multi_color::h : unsigned short #<nuklear.h>
	nk_command_rect_multi_color::left : struct nk_color #<nuklear.h>
	nk_command_rect_multi_color::top : struct nk_color #<nuklear.h>
	nk_command_rect_multi_color::bottom : struct nk_color #<nuklear.h>
	nk_command_rect_multi_color::right : struct nk_color #<nuklear.h>
	nk_command_scissor::header : struct nk_command #<nuklear.h>
	nk_command_scissor::x : short #<nuklear.h>
	nk_command_scissor::y : short #<nuklear.h>
	nk_command_scissor::w : unsigned short #<nuklear.h>
	nk_command_scissor::h : unsigned short #<nuklear.h>
	nk_command_text::header : struct nk_command #<nuklear.h>
	nk_command_text::font : const struct nk_user_font* #<nuklear.h>
	nk_command_text::background : struct nk_color #<nuklear.h>
	nk_command_text::foreground : struct nk_color #<nuklear.h>
	nk_command_text::x : short #<nuklear.h>
	nk_command_text::y : short #<nuklear.h>
	nk_command_text::w : unsigned short #<nuklear.h>
	nk_command_text::h : unsigned short #<nuklear.h>
	nk_command_text::height : float #<nuklear.h>
	nk_command_text::length : int #<nuklear.h>
	nk_command_text::string : char[] #<nuklear.h>
	nk_command_triangle::header : struct nk_command #<nuklear.h>
	nk_command_triangle::line_thickness : unsigned short #<nuklear.h>
	nk_command_triangle::a : struct nk_vec2i #<nuklear.h>
	nk_command_triangle::b : struct nk_vec2i #<nuklear.h>
	nk_command_triangle::c : struct nk_vec2i #<nuklear.h>
	nk_command_triangle::color : struct nk_color #<nuklear.h>
	nk_command_triangle_filled::header : struct nk_command #<nuklear.h>
	nk_command_triangle_filled::a : struct nk_vec2i #<nuklear.h>
	nk_command_triangle_filled::b : struct nk_vec2i #<nuklear.h>
	nk_command_triangle_filled::c : struct nk_vec2i #<nuklear.h>
	nk_command_triangle_filled::color : struct nk_color #<nuklear.h>
	nk_configuration_stacks::style_items : struct nk_config_stack_style_item #<nuklear.h>
	nk_configuration_stacks::floats : struct nk_config_stack_float #<nuklear.h>
	nk_configuration_stacks::vectors : struct nk_config_stack_vec2 #<nuklear.h>
	nk_configuration_stacks::flags : struct nk_config_stack_flags #<nuklear.h>
	nk_configuration_stacks::colors : struct nk_config_stack_color #<nuklear.h>
	nk_configuration_stacks::fonts : struct nk_config_stack_user_font #<nuklear.h>
	nk_configuration_stacks::button_behaviors : struct nk_config_stack_button_behavior #<nuklear.h>
	nk_context::input : struct nk_input #<nuklear.h>
	nk_context::style : struct nk_style #<nuklear.h>
	nk_context::memory : struct nk_buffer #<nuklear.h>
	nk_context::clip : struct nk_clipboard #<nuklear.h>
	nk_context::last_widget_state : nk_flags #<nuklear.h>
	nk_context::button_behavior : enum nk_button_behavior #<nuklear.h>
	nk_context::stacks : struct nk_configuration_stacks #<nuklear.h>
	nk_context::delta_time_seconds : float #<nuklear.h>
	nk_context::draw_list : struct nk_draw_list #<nuklear.h>
	nk_context::userdata : nk_handle #<nuklear.h>
	nk_context::text_edit : struct nk_text_edit #<nuklear.h>
	nk_context::overlay : struct nk_command_buffer #<nuklear.h>
	nk_context::build : int #<nuklear.h>
	nk_context::use_pool : int #<nuklear.h>
	nk_context::pool : struct nk_pool #<nuklear.h>
	nk_context::begin : struct nk_window* #<nuklear.h>
	nk_context::end : struct nk_window* #<nuklear.h>
	nk_context::active : struct nk_window* #<nuklear.h>
	nk_context::current : struct nk_window* #<nuklear.h>
	nk_context::freelist : struct nk_page_element* #<nuklear.h>
	nk_context::count : unsigned int #<nuklear.h>
	nk_context::seq : unsigned int #<nuklear.h>
	nk_convert_config::global_alpha : float #<nuklear.h>
	nk_convert_config::line_AA : enum nk_anti_aliasing #<nuklear.h>
	nk_convert_config::shape_AA : enum nk_anti_aliasing #<nuklear.h>
	nk_convert_config::circle_segment_count : unsigned #<nuklear.h>
	nk_convert_config::arc_segment_count : unsigned #<nuklear.h>
	nk_convert_config::curve_segment_count : unsigned #<nuklear.h>
	nk_convert_config::null : struct nk_draw_null_texture #<nuklear.h>
	nk_convert_config::vertex_layout : const struct nk_draw_vertex_layout_element* #<nuklear.h>
	nk_convert_config::vertex_size : nk_size #<nuklear.h>
	nk_convert_config::vertex_alignment : nk_size #<nuklear.h>
	nk_cursor::img : struct nk_image #<nuklear.h>
	nk_cursor::size : struct nk_vec2 #<nuklear.h>
	nk_cursor::offset : struct nk_vec2 #<nuklear.h>
	nk_draw_command::elem_count : unsigned int #<nuklear.h>
	nk_draw_command::clip_rect : struct nk_rect #<nuklear.h>
	nk_draw_command::texture : nk_handle #<nuklear.h>
	nk_draw_command::userdata : nk_handle #<nuklear.h>
	nk_draw_list::clip_rect : struct nk_rect #<nuklear.h>
	nk_draw_list::circle_vtx : struct nk_vec2[] #<nuklear.h>
	nk_draw_list::config : struct nk_convert_config #<nuklear.h>
	nk_draw_list::buffer : struct nk_buffer* #<nuklear.h>
	nk_draw_list::vertices : struct nk_buffer* #<nuklear.h>
	nk_draw_list::elements : struct nk_buffer* #<nuklear.h>
	nk_draw_list::element_count : unsigned int #<nuklear.h>
	nk_draw_list::vertex_count : unsigned int #<nuklear.h>
	nk_draw_list::cmd_count : unsigned int #<nuklear.h>
	nk_draw_list::cmd_offset : nk_size #<nuklear.h>
	nk_draw_list::path_count : unsigned int #<nuklear.h>
	nk_draw_list::path_offset : unsigned int #<nuklear.h>
	nk_draw_list::line_AA : enum nk_anti_aliasing #<nuklear.h>
	nk_draw_list::shape_AA : enum nk_anti_aliasing #<nuklear.h>
	nk_draw_list::userdata : nk_handle #<nuklear.h>
	nk_draw_null_texture::texture : nk_handle #<nuklear.h>
	nk_draw_null_texture::uv : struct nk_vec2 #<nuklear.h>
	nk_draw_vertex_layout_element::attribute : enum nk_draw_vertex_layout_attribute #<nuklear.h>
	nk_draw_vertex_layout_element::format : enum nk_draw_vertex_layout_format #<nuklear.h>
	nk_draw_vertex_layout_element::offset : nk_size #<nuklear.h>
	nk_edit_state::name : nk_hash #<nuklear.h>
	nk_edit_state::seq : unsigned int #<nuklear.h>
	nk_edit_state::old : unsigned int #<nuklear.h>
	nk_edit_state::active : int #<nuklear.h>
	nk_edit_state::prev : int #<nuklear.h>
	nk_edit_state::cursor : int #<nuklear.h>
	nk_edit_state::sel_start : int #<nuklear.h>
	nk_edit_state::sel_end : int #<nuklear.h>
	nk_edit_state::scrollbar : struct nk_scroll #<nuklear.h>
	nk_edit_state::mode : unsigned char #<nuklear.h>
	nk_edit_state::single_line : unsigned char #<nuklear.h>
	nk_font::next : struct nk_font* #<nuklear.h>
	nk_font::handle : struct nk_user_font #<nuklear.h>
	nk_font::info : struct nk_baked_font #<nuklear.h>
	nk_font::scale : float #<nuklear.h>
	nk_font::glyphs : struct nk_font_glyph* #<nuklear.h>
	nk_font::fallback : const struct nk_font_glyph* #<nuklear.h>
	nk_font::fallback_codepoint : nk_rune #<nuklear.h>
	nk_font::texture : nk_handle #<nuklear.h>
	nk_font::config : struct nk_font_config* #<nuklear.h>
	nk_font_atlas::pixel : void* #<nuklear.h>
	nk_font_atlas::tex_width : int #<nuklear.h>
	nk_font_atlas::tex_height : int #<nuklear.h>
	nk_font_atlas::permanent : struct nk_allocator #<nuklear.h>
	nk_font_atlas::temporary : struct nk_allocator #<nuklear.h>
	nk_font_atlas::custom : struct nk_recti #<nuklear.h>
	nk_font_atlas::cursors : struct nk_cursor[] #<nuklear.h>
	nk_font_atlas::glyph_count : int #<nuklear.h>
	nk_font_atlas::glyphs : struct nk_font_glyph* #<nuklear.h>
	nk_font_atlas::default_font : struct nk_font* #<nuklear.h>
	nk_font_atlas::fonts : struct nk_font* #<nuklear.h>
	nk_font_atlas::config : struct nk_font_config* #<nuklear.h>
	nk_font_atlas::font_num : int #<nuklear.h>
	nk_font_config::next : struct nk_font_config* #<nuklear.h>
	nk_font_config::ttf_blob : void* #<nuklear.h>
	nk_font_config::ttf_size : nk_size #<nuklear.h>
	nk_font_config::ttf_data_owned_by_atlas : unsigned char #<nuklear.h>
	nk_font_config::merge_mode : unsigned char #<nuklear.h>
	nk_font_config::pixel_snap : unsigned char #<nuklear.h>
	nk_font_config::oversample_v : unsigned char #<nuklear.h>
	nk_font_config::oversample_h : unsigned char #<nuklear.h>
	nk_font_config::padding : unsigned char[] #<nuklear.h>
	nk_font_config::size : float #<nuklear.h>
	nk_font_config::coord_type : enum nk_font_coord_type #<nuklear.h>
	nk_font_config::spacing : struct nk_vec2 #<nuklear.h>
	nk_font_config::range : const nk_rune* #<nuklear.h>
	nk_font_config::font : struct nk_baked_font* #<nuklear.h>
	nk_font_config::fallback_glyph : nk_rune #<nuklear.h>
	nk_font_config::n : struct nk_font_config* #<nuklear.h>
	nk_font_config::p : struct nk_font_config* #<nuklear.h>
	nk_font_glyph::codepoint : nk_rune #<nuklear.h>
	nk_font_glyph::xadvance : float #<nuklear.h>
	nk_font_glyph::x0 : float #<nuklear.h>
	nk_font_glyph::y0 : float #<nuklear.h>
	nk_font_glyph::x1 : float #<nuklear.h>
	nk_font_glyph::y1 : float #<nuklear.h>
	nk_font_glyph::w : float #<nuklear.h>
	nk_font_glyph::h : float #<nuklear.h>
	nk_font_glyph::u0 : float #<nuklear.h>
	nk_font_glyph::v0 : float #<nuklear.h>
	nk_font_glyph::u1 : float #<nuklear.h>
	nk_font_glyph::v1 : float #<nuklear.h>
	nk_image::handle : nk_handle #<nuklear.h>
	nk_image::w : unsigned short #<nuklear.h>
	nk_image::h : unsigned short #<nuklear.h>
	nk_image::region : unsigned short[] #<nuklear.h>
	nk_input::keyboard : struct nk_keyboard #<nuklear.h>
	nk_input::mouse : struct nk_mouse #<nuklear.h>
	nk_key::down : int #<nuklear.h>
	nk_key::clicked : unsigned int #<nuklear.h>
	nk_keyboard::keys : struct nk_key[] #<nuklear.h>
	nk_keyboard::text : char[] #<nuklear.h>
	nk_keyboard::text_len : int #<nuklear.h>
	nk_list_view::begin : int #<nuklear.h>
	nk_list_view::end : int #<nuklear.h>
	nk_list_view::count : int #<nuklear.h>
	nk_list_view::total_height : int #<nuklear.h>
	nk_list_view::ctx : struct nk_context* #<nuklear.h>
	nk_list_view::scroll_pointer : nk_uint* #<nuklear.h>
	nk_list_view::scroll_value : nk_uint #<nuklear.h>
	nk_memory::ptr : void* #<nuklear.h>
	nk_memory::size : nk_size #<nuklear.h>
	nk_memory_status::memory : void* #<nuklear.h>
	nk_memory_status::type : unsigned int #<nuklear.h>
	nk_memory_status::size : nk_size #<nuklear.h>
	nk_memory_status::allocated : nk_size #<nuklear.h>
	nk_memory_status::needed : nk_size #<nuklear.h>
	nk_memory_status::calls : nk_size #<nuklear.h>
	nk_menu_state::x : float #<nuklear.h>
	nk_menu_state::y : float #<nuklear.h>
	nk_menu_state::w : float #<nuklear.h>
	nk_menu_state::h : float #<nuklear.h>
	nk_menu_state::offset : struct nk_scroll #<nuklear.h>
	nk_mouse::buttons : struct nk_mouse_button[] #<nuklear.h>
	nk_mouse::pos : struct nk_vec2 #<nuklear.h>
	nk_mouse::prev : struct nk_vec2 #<nuklear.h>
	nk_mouse::delta : struct nk_vec2 #<nuklear.h>
	nk_mouse::scroll_delta : struct nk_vec2 #<nuklear.h>
	nk_mouse::grab : unsigned char #<nuklear.h>
	nk_mouse::grabbed : unsigned char #<nuklear.h>
	nk_mouse::ungrab : unsigned char #<nuklear.h>
	nk_mouse_button::down : int #<nuklear.h>
	nk_mouse_button::clicked : unsigned int #<nuklear.h>
	nk_mouse_button::clicked_pos : struct nk_vec2 #<nuklear.h>
	nk_page::size : unsigned int #<nuklear.h>
	nk_page::next : struct nk_page* #<nuklear.h>
	nk_page::win : struct nk_page_element[] #<nuklear.h>
	nk_page_element::data : union nk_page_data #<nuklear.h>
	nk_page_element::next : struct nk_page_element* #<nuklear.h>
	nk_page_element::prev : struct nk_page_element* #<nuklear.h>
	nk_panel::type : enum nk_panel_type #<nuklear.h>
	nk_panel::flags : nk_flags #<nuklear.h>
	nk_panel::bounds : struct nk_rect #<nuklear.h>
	nk_panel::offset_x : nk_uint* #<nuklear.h>
	nk_panel::offset_y : nk_uint* #<nuklear.h>
	nk_panel::at_x : float #<nuklear.h>
	nk_panel::at_y : float #<nuklear.h>
	nk_panel::max_x : float #<nuklear.h>
	nk_panel::footer_height : float #<nuklear.h>
	nk_panel::header_height : float #<nuklear.h>
	nk_panel::border : float #<nuklear.h>
	nk_panel::has_scrolling : unsigned int #<nuklear.h>
	nk_panel::clip : struct nk_rect #<nuklear.h>
	nk_panel::menu : struct nk_menu_state #<nuklear.h>
	nk_panel::row : struct nk_row_layout #<nuklear.h>
	nk_panel::chart : struct nk_chart #<nuklear.h>
	nk_panel::buffer : struct nk_command_buffer* #<nuklear.h>
	nk_panel::parent : struct nk_panel* #<nuklear.h>
	nk_pool::alloc : struct nk_allocator #<nuklear.h>
	nk_pool::type : enum nk_allocation_type #<nuklear.h>
	nk_pool::page_count : unsigned int #<nuklear.h>
	nk_pool::pages : struct nk_page* #<nuklear.h>
	nk_pool::freelist : struct nk_page_element* #<nuklear.h>
	nk_pool::capacity : unsigned #<nuklear.h>
	nk_pool::size : nk_size #<nuklear.h>
	nk_pool::cap : nk_size #<nuklear.h>
	nk_popup_buffer::begin : nk_size #<nuklear.h>
	nk_popup_buffer::parent : nk_size #<nuklear.h>
	nk_popup_buffer::last : nk_size #<nuklear.h>
	nk_popup_buffer::end : nk_size #<nuklear.h>
	nk_popup_buffer::active : int #<nuklear.h>
	nk_popup_state::win : struct nk_window* #<nuklear.h>
	nk_popup_state::type : enum nk_panel_type #<nuklear.h>
	nk_popup_state::buf : struct nk_popup_buffer #<nuklear.h>
	nk_popup_state::name : nk_hash #<nuklear.h>
	nk_popup_state::active : int #<nuklear.h>
	nk_popup_state::combo_count : unsigned #<nuklear.h>
	nk_popup_state::con_count : unsigned #<nuklear.h>
	nk_popup_state::con_old : unsigned #<nuklear.h>
	nk_popup_state::active_con : unsigned #<nuklear.h>
	nk_popup_state::header : struct nk_rect #<nuklear.h>
	nk_property_state::active : int #<nuklear.h>
	nk_property_state::prev : int #<nuklear.h>
	nk_property_state::buffer : char[] #<nuklear.h>
	nk_property_state::length : int #<nuklear.h>
	nk_property_state::cursor : int #<nuklear.h>
	nk_property_state::select_start : int #<nuklear.h>
	nk_property_state::select_end : int #<nuklear.h>
	nk_property_state::name : nk_hash #<nuklear.h>
	nk_property_state::seq : unsigned int #<nuklear.h>
	nk_property_state::old : unsigned int #<nuklear.h>
	nk_property_state::state : int #<nuklear.h>
	nk_rect::x : float #<nuklear.h>
	nk_rect::y : float #<nuklear.h>
	nk_rect::w : float #<nuklear.h>
	nk_rect::h : float #<nuklear.h>
	nk_recti::x : short #<nuklear.h>
	nk_recti::y : short #<nuklear.h>
	nk_recti::w : short #<nuklear.h>
	nk_recti::h : short #<nuklear.h>
	nk_row_layout::type : enum nk_panel_row_layout_type #<nuklear.h>
	nk_row_layout::index : int #<nuklear.h>
	nk_row_layout::height : float #<nuklear.h>
	nk_row_layout::min_height : float #<nuklear.h>
	nk_row_layout::columns : int #<nuklear.h>
	nk_row_layout::ratio : const float* #<nuklear.h>
	nk_row_layout::item_width : float #<nuklear.h>
	nk_row_layout::item_height : float #<nuklear.h>
	nk_row_layout::item_offset : float #<nuklear.h>
	nk_row_layout::filled : float #<nuklear.h>
	nk_row_layout::item : struct nk_rect #<nuklear.h>
	nk_row_layout::tree_depth : int #<nuklear.h>
	nk_row_layout::templates : float[] #<nuklear.h>
	nk_scroll::x : nk_uint #<nuklear.h>
	nk_scroll::y : nk_uint #<nuklear.h>
	nk_str::buffer : struct nk_buffer #<nuklear.h>
	nk_str::len : int #<nuklear.h>
	nk_style::font : const struct nk_user_font* #<nuklear.h>
	nk_style::cursors : const struct nk_cursor*[] #<nuklear.h>
	nk_style::cursor_active : const struct nk_cursor* #<nuklear.h>
	nk_style::cursor_last : struct nk_cursor* #<nuklear.h>
	nk_style::cursor_visible : int #<nuklear.h>
	nk_style::text : struct nk_style_text #<nuklear.h>
	nk_style::button : struct nk_style_button #<nuklear.h>
	nk_style::contextual_button : struct nk_style_button #<nuklear.h>
	nk_style::menu_button : struct nk_style_button #<nuklear.h>
	nk_style::option : struct nk_style_toggle #<nuklear.h>
	nk_style::checkbox : struct nk_style_toggle #<nuklear.h>
	nk_style::selectable : struct nk_style_selectable #<nuklear.h>
	nk_style::slider : struct nk_style_slider #<nuklear.h>
	nk_style::progress : struct nk_style_progress #<nuklear.h>
	nk_style::property : struct nk_style_property #<nuklear.h>
	nk_style::edit : struct nk_style_edit #<nuklear.h>
	nk_style::chart : struct nk_style_chart #<nuklear.h>
	nk_style::scrollh : struct nk_style_scrollbar #<nuklear.h>
	nk_style::scrollv : struct nk_style_scrollbar #<nuklear.h>
	nk_style::tab : struct nk_style_tab #<nuklear.h>
	nk_style::combo : struct nk_style_combo #<nuklear.h>
	nk_style::window : struct nk_style_window #<nuklear.h>
	nk_style_button::normal : struct nk_style_item #<nuklear.h>
	nk_style_button::hover : struct nk_style_item #<nuklear.h>
	nk_style_button::active : struct nk_style_item #<nuklear.h>
	nk_style_button::border_color : struct nk_color #<nuklear.h>
	nk_style_button::text_background : struct nk_color #<nuklear.h>
	nk_style_button::text_normal : struct nk_color #<nuklear.h>
	nk_style_button::text_hover : struct nk_color #<nuklear.h>
	nk_style_button::text_active : struct nk_color #<nuklear.h>
	nk_style_button::text_alignment : nk_flags #<nuklear.h>
	nk_style_button::border : float #<nuklear.h>
	nk_style_button::rounding : float #<nuklear.h>
	nk_style_button::padding : struct nk_vec2 #<nuklear.h>
	nk_style_button::image_padding : struct nk_vec2 #<nuklear.h>
	nk_style_button::touch_padding : struct nk_vec2 #<nuklear.h>
	nk_style_button::userdata : nk_handle #<nuklear.h>
	nk_style_button::void :  #<nuklear.h>
	nk_style_chart::background : struct nk_style_item #<nuklear.h>
	nk_style_chart::border_color : struct nk_color #<nuklear.h>
	nk_style_chart::selected_color : struct nk_color #<nuklear.h>
	nk_style_chart::color : struct nk_color #<nuklear.h>
	nk_style_chart::border : float #<nuklear.h>
	nk_style_chart::rounding : float #<nuklear.h>
	nk_style_chart::padding : struct nk_vec2 #<nuklear.h>
	nk_style_combo::normal : struct nk_style_item #<nuklear.h>
	nk_style_combo::hover : struct nk_style_item #<nuklear.h>
	nk_style_combo::active : struct nk_style_item #<nuklear.h>
	nk_style_combo::border_color : struct nk_color #<nuklear.h>
	nk_style_combo::label_normal : struct nk_color #<nuklear.h>
	nk_style_combo::label_hover : struct nk_color #<nuklear.h>
	nk_style_combo::label_active : struct nk_color #<nuklear.h>
	nk_style_combo::symbol_normal : struct nk_color #<nuklear.h>
	nk_style_combo::symbol_hover : struct nk_color #<nuklear.h>
	nk_style_combo::symbol_active : struct nk_color #<nuklear.h>
	nk_style_combo::button : struct nk_style_button #<nuklear.h>
	nk_style_combo::sym_normal : enum nk_symbol_type #<nuklear.h>
	nk_style_combo::sym_hover : enum nk_symbol_type #<nuklear.h>
	nk_style_combo::sym_active : enum nk_symbol_type #<nuklear.h>
	nk_style_combo::border : float #<nuklear.h>
	nk_style_combo::rounding : float #<nuklear.h>
	nk_style_combo::content_padding : struct nk_vec2 #<nuklear.h>
	nk_style_combo::button_padding : struct nk_vec2 #<nuklear.h>
	nk_style_combo::spacing : struct nk_vec2 #<nuklear.h>
	nk_style_edit::normal : struct nk_style_item #<nuklear.h>
	nk_style_edit::hover : struct nk_style_item #<nuklear.h>
	nk_style_edit::active : struct nk_style_item #<nuklear.h>
	nk_style_edit::border_color : struct nk_color #<nuklear.h>
	nk_style_edit::scrollbar : struct nk_style_scrollbar #<nuklear.h>
	nk_style_edit::cursor_normal : struct nk_color #<nuklear.h>
	nk_style_edit::cursor_hover : struct nk_color #<nuklear.h>
	nk_style_edit::cursor_text_normal : struct nk_color #<nuklear.h>
	nk_style_edit::cursor_text_hover : struct nk_color #<nuklear.h>
	nk_style_edit::text_normal : struct nk_color #<nuklear.h>
	nk_style_edit::text_hover : struct nk_color #<nuklear.h>
	nk_style_edit::text_active : struct nk_color #<nuklear.h>
	nk_style_edit::selected_normal : struct nk_color #<nuklear.h>
	nk_style_edit::selected_hover : struct nk_color #<nuklear.h>
	nk_style_edit::selected_text_normal : struct nk_color #<nuklear.h>
	nk_style_edit::selected_text_hover : struct nk_color #<nuklear.h>
	nk_style_edit::border : float #<nuklear.h>
	nk_style_edit::rounding : float #<nuklear.h>
	nk_style_edit::cursor_size : float #<nuklear.h>
	nk_style_edit::scrollbar_size : struct nk_vec2 #<nuklear.h>
	nk_style_edit::padding : struct nk_vec2 #<nuklear.h>
	nk_style_edit::row_padding : float #<nuklear.h>
	nk_style_item::type : enum nk_style_item_type #<nuklear.h>
	nk_style_item::data : union nk_style_item_data #<nuklear.h>
	nk_style_progress::normal : struct nk_style_item #<nuklear.h>
	nk_style_progress::hover : struct nk_style_item #<nuklear.h>
	nk_style_progress::active : struct nk_style_item #<nuklear.h>
	nk_style_progress::border_color : struct nk_color #<nuklear.h>
	nk_style_progress::cursor_normal : struct nk_style_item #<nuklear.h>
	nk_style_progress::cursor_hover : struct nk_style_item #<nuklear.h>
	nk_style_progress::cursor_active : struct nk_style_item #<nuklear.h>
	nk_style_progress::cursor_border_color : struct nk_color #<nuklear.h>
	nk_style_progress::rounding : float #<nuklear.h>
	nk_style_progress::border : float #<nuklear.h>
	nk_style_progress::cursor_border : float #<nuklear.h>
	nk_style_progress::cursor_rounding : float #<nuklear.h>
	nk_style_progress::padding : struct nk_vec2 #<nuklear.h>
	nk_style_progress::userdata : nk_handle #<nuklear.h>
	nk_style_progress::void :  #<nuklear.h>
	nk_style_property::normal : struct nk_style_item #<nuklear.h>
	nk_style_property::hover : struct nk_style_item #<nuklear.h>
	nk_style_property::active : struct nk_style_item #<nuklear.h>
	nk_style_property::border_color : struct nk_color #<nuklear.h>
	nk_style_property::label_normal : struct nk_color #<nuklear.h>
	nk_style_property::label_hover : struct nk_color #<nuklear.h>
	nk_style_property::label_active : struct nk_color #<nuklear.h>
	nk_style_property::sym_left : enum nk_symbol_type #<nuklear.h>
	nk_style_property::sym_right : enum nk_symbol_type #<nuklear.h>
	nk_style_property::border : float #<nuklear.h>
	nk_style_property::rounding : float #<nuklear.h>
	nk_style_property::padding : struct nk_vec2 #<nuklear.h>
	nk_style_property::edit : struct nk_style_edit #<nuklear.h>
	nk_style_property::inc_button : struct nk_style_button #<nuklear.h>
	nk_style_property::dec_button : struct nk_style_button #<nuklear.h>
	nk_style_property::userdata : nk_handle #<nuklear.h>
	nk_style_property::void :  #<nuklear.h>
	nk_style_scrollbar::normal : struct nk_style_item #<nuklear.h>
	nk_style_scrollbar::hover : struct nk_style_item #<nuklear.h>
	nk_style_scrollbar::active : struct nk_style_item #<nuklear.h>
	nk_style_scrollbar::border_color : struct nk_color #<nuklear.h>
	nk_style_scrollbar::cursor_normal : struct nk_style_item #<nuklear.h>
	nk_style_scrollbar::cursor_hover : struct nk_style_item #<nuklear.h>
	nk_style_scrollbar::cursor_active : struct nk_style_item #<nuklear.h>
	nk_style_scrollbar::cursor_border_color : struct nk_color #<nuklear.h>
	nk_style_scrollbar::border : float #<nuklear.h>
	nk_style_scrollbar::rounding : float #<nuklear.h>
	nk_style_scrollbar::border_cursor : float #<nuklear.h>
	nk_style_scrollbar::rounding_cursor : float #<nuklear.h>
	nk_style_scrollbar::padding : struct nk_vec2 #<nuklear.h>
	nk_style_scrollbar::show_buttons : int #<nuklear.h>
	nk_style_scrollbar::inc_button : struct nk_style_button #<nuklear.h>
	nk_style_scrollbar::dec_button : struct nk_style_button #<nuklear.h>
	nk_style_scrollbar::inc_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_scrollbar::dec_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_scrollbar::userdata : nk_handle #<nuklear.h>
	nk_style_scrollbar::void :  #<nuklear.h>
	nk_style_selectable::normal : struct nk_style_item #<nuklear.h>
	nk_style_selectable::hover : struct nk_style_item #<nuklear.h>
	nk_style_selectable::pressed : struct nk_style_item #<nuklear.h>
	nk_style_selectable::normal_active : struct nk_style_item #<nuklear.h>
	nk_style_selectable::hover_active : struct nk_style_item #<nuklear.h>
	nk_style_selectable::pressed_active : struct nk_style_item #<nuklear.h>
	nk_style_selectable::text_normal : struct nk_color #<nuklear.h>
	nk_style_selectable::text_hover : struct nk_color #<nuklear.h>
	nk_style_selectable::text_pressed : struct nk_color #<nuklear.h>
	nk_style_selectable::text_normal_active : struct nk_color #<nuklear.h>
	nk_style_selectable::text_hover_active : struct nk_color #<nuklear.h>
	nk_style_selectable::text_pressed_active : struct nk_color #<nuklear.h>
	nk_style_selectable::text_background : struct nk_color #<nuklear.h>
	nk_style_selectable::text_alignment : nk_flags #<nuklear.h>
	nk_style_selectable::rounding : float #<nuklear.h>
	nk_style_selectable::padding : struct nk_vec2 #<nuklear.h>
	nk_style_selectable::touch_padding : struct nk_vec2 #<nuklear.h>
	nk_style_selectable::image_padding : struct nk_vec2 #<nuklear.h>
	nk_style_selectable::userdata : nk_handle #<nuklear.h>
	nk_style_selectable::void :  #<nuklear.h>
	nk_style_slider::normal : struct nk_style_item #<nuklear.h>
	nk_style_slider::hover : struct nk_style_item #<nuklear.h>
	nk_style_slider::active : struct nk_style_item #<nuklear.h>
	nk_style_slider::border_color : struct nk_color #<nuklear.h>
	nk_style_slider::bar_normal : struct nk_color #<nuklear.h>
	nk_style_slider::bar_hover : struct nk_color #<nuklear.h>
	nk_style_slider::bar_active : struct nk_color #<nuklear.h>
	nk_style_slider::bar_filled : struct nk_color #<nuklear.h>
	nk_style_slider::cursor_normal : struct nk_style_item #<nuklear.h>
	nk_style_slider::cursor_hover : struct nk_style_item #<nuklear.h>
	nk_style_slider::cursor_active : struct nk_style_item #<nuklear.h>
	nk_style_slider::border : float #<nuklear.h>
	nk_style_slider::rounding : float #<nuklear.h>
	nk_style_slider::bar_height : float #<nuklear.h>
	nk_style_slider::padding : struct nk_vec2 #<nuklear.h>
	nk_style_slider::spacing : struct nk_vec2 #<nuklear.h>
	nk_style_slider::cursor_size : struct nk_vec2 #<nuklear.h>
	nk_style_slider::show_buttons : int #<nuklear.h>
	nk_style_slider::inc_button : struct nk_style_button #<nuklear.h>
	nk_style_slider::dec_button : struct nk_style_button #<nuklear.h>
	nk_style_slider::inc_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_slider::dec_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_slider::userdata : nk_handle #<nuklear.h>
	nk_style_slider::void :  #<nuklear.h>
	nk_style_tab::background : struct nk_style_item #<nuklear.h>
	nk_style_tab::border_color : struct nk_color #<nuklear.h>
	nk_style_tab::text : struct nk_color #<nuklear.h>
	nk_style_tab::tab_maximize_button : struct nk_style_button #<nuklear.h>
	nk_style_tab::tab_minimize_button : struct nk_style_button #<nuklear.h>
	nk_style_tab::node_maximize_button : struct nk_style_button #<nuklear.h>
	nk_style_tab::node_minimize_button : struct nk_style_button #<nuklear.h>
	nk_style_tab::sym_minimize : enum nk_symbol_type #<nuklear.h>
	nk_style_tab::sym_maximize : enum nk_symbol_type #<nuklear.h>
	nk_style_tab::border : float #<nuklear.h>
	nk_style_tab::rounding : float #<nuklear.h>
	nk_style_tab::indent : float #<nuklear.h>
	nk_style_tab::padding : struct nk_vec2 #<nuklear.h>
	nk_style_tab::spacing : struct nk_vec2 #<nuklear.h>
	nk_style_text::color : struct nk_color #<nuklear.h>
	nk_style_text::padding : struct nk_vec2 #<nuklear.h>
	nk_style_toggle::normal : struct nk_style_item #<nuklear.h>
	nk_style_toggle::hover : struct nk_style_item #<nuklear.h>
	nk_style_toggle::active : struct nk_style_item #<nuklear.h>
	nk_style_toggle::border_color : struct nk_color #<nuklear.h>
	nk_style_toggle::cursor_normal : struct nk_style_item #<nuklear.h>
	nk_style_toggle::cursor_hover : struct nk_style_item #<nuklear.h>
	nk_style_toggle::text_normal : struct nk_color #<nuklear.h>
	nk_style_toggle::text_hover : struct nk_color #<nuklear.h>
	nk_style_toggle::text_active : struct nk_color #<nuklear.h>
	nk_style_toggle::text_background : struct nk_color #<nuklear.h>
	nk_style_toggle::text_alignment : nk_flags #<nuklear.h>
	nk_style_toggle::padding : struct nk_vec2 #<nuklear.h>
	nk_style_toggle::touch_padding : struct nk_vec2 #<nuklear.h>
	nk_style_toggle::spacing : float #<nuklear.h>
	nk_style_toggle::border : float #<nuklear.h>
	nk_style_toggle::userdata : nk_handle #<nuklear.h>
	nk_style_toggle::void :  #<nuklear.h>
	nk_style_window::header : struct nk_style_window_header #<nuklear.h>
	nk_style_window::fixed_background : struct nk_style_item #<nuklear.h>
	nk_style_window::background : struct nk_color #<nuklear.h>
	nk_style_window::border_color : struct nk_color #<nuklear.h>
	nk_style_window::popup_border_color : struct nk_color #<nuklear.h>
	nk_style_window::combo_border_color : struct nk_color #<nuklear.h>
	nk_style_window::contextual_border_color : struct nk_color #<nuklear.h>
	nk_style_window::menu_border_color : struct nk_color #<nuklear.h>
	nk_style_window::group_border_color : struct nk_color #<nuklear.h>
	nk_style_window::tooltip_border_color : struct nk_color #<nuklear.h>
	nk_style_window::scaler : struct nk_style_item #<nuklear.h>
	nk_style_window::border : float #<nuklear.h>
	nk_style_window::combo_border : float #<nuklear.h>
	nk_style_window::contextual_border : float #<nuklear.h>
	nk_style_window::menu_border : float #<nuklear.h>
	nk_style_window::group_border : float #<nuklear.h>
	nk_style_window::tooltip_border : float #<nuklear.h>
	nk_style_window::popup_border : float #<nuklear.h>
	nk_style_window::min_row_height_padding : float #<nuklear.h>
	nk_style_window::rounding : float #<nuklear.h>
	nk_style_window::spacing : struct nk_vec2 #<nuklear.h>
	nk_style_window::scrollbar_size : struct nk_vec2 #<nuklear.h>
	nk_style_window::min_size : struct nk_vec2 #<nuklear.h>
	nk_style_window::padding : struct nk_vec2 #<nuklear.h>
	nk_style_window::group_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window::popup_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window::combo_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window::contextual_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window::menu_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window::tooltip_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window_header::normal : struct nk_style_item #<nuklear.h>
	nk_style_window_header::hover : struct nk_style_item #<nuklear.h>
	nk_style_window_header::active : struct nk_style_item #<nuklear.h>
	nk_style_window_header::close_button : struct nk_style_button #<nuklear.h>
	nk_style_window_header::minimize_button : struct nk_style_button #<nuklear.h>
	nk_style_window_header::close_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_window_header::minimize_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_window_header::maximize_symbol : enum nk_symbol_type #<nuklear.h>
	nk_style_window_header::label_normal : struct nk_color #<nuklear.h>
	nk_style_window_header::label_hover : struct nk_color #<nuklear.h>
	nk_style_window_header::label_active : struct nk_color #<nuklear.h>
	nk_style_window_header::align : enum nk_style_header_align #<nuklear.h>
	nk_style_window_header::padding : struct nk_vec2 #<nuklear.h>
	nk_style_window_header::label_padding : struct nk_vec2 #<nuklear.h>
	nk_style_window_header::spacing : struct nk_vec2 #<nuklear.h>
	nk_table::seq : unsigned int #<nuklear.h>
	nk_table::size : unsigned int #<nuklear.h>
	nk_table::keys : nk_hash[] #<nuklear.h>
	nk_table::values : nk_uint[] #<nuklear.h>
	nk_table::next : struct nk_table* #<nuklear.h>
	nk_table::prev : struct nk_table* #<nuklear.h>
	nk_text_edit::clip : struct nk_clipboard #<nuklear.h>
	nk_text_edit::string : struct nk_str #<nuklear.h>
	nk_text_edit::filter : nk_plugin_filter #<nuklear.h>
	nk_text_edit::scrollbar : struct nk_vec2 #<nuklear.h>
	nk_text_edit::cursor : int #<nuklear.h>
	nk_text_edit::select_start : int #<nuklear.h>
	nk_text_edit::select_end : int #<nuklear.h>
	nk_text_edit::mode : unsigned char #<nuklear.h>
	nk_text_edit::cursor_at_end_of_line : unsigned char #<nuklear.h>
	nk_text_edit::initialized : unsigned char #<nuklear.h>
	nk_text_edit::has_preferred_x : unsigned char #<nuklear.h>
	nk_text_edit::single_line : unsigned char #<nuklear.h>
	nk_text_edit::active : unsigned char #<nuklear.h>
	nk_text_edit::padding1 : unsigned char #<nuklear.h>
	nk_text_edit::preferred_x : float #<nuklear.h>
	nk_text_edit::undo : struct nk_text_undo_state #<nuklear.h>
	nk_text_undo_record::where : int #<nuklear.h>
	nk_text_undo_record::insert_length : short #<nuklear.h>
	nk_text_undo_record::delete_length : short #<nuklear.h>
	nk_text_undo_record::char_storage : short #<nuklear.h>
	nk_text_undo_state::undo_rec : struct nk_text_undo_record[] #<nuklear.h>
	nk_text_undo_state::undo_char : nk_rune[] #<nuklear.h>
	nk_text_undo_state::undo_point : short #<nuklear.h>
	nk_text_undo_state::redo_point : short #<nuklear.h>
	nk_text_undo_state::undo_char_point : short #<nuklear.h>
	nk_text_undo_state::redo_char_point : short #<nuklear.h>
	nk_user_font::userdata : nk_handle #<nuklear.h>
	nk_user_font::height : float #<nuklear.h>
	nk_user_font::width : nk_text_width_f #<nuklear.h>
	nk_user_font::query : nk_query_font_glyph_f #<nuklear.h>
	nk_user_font::texture : nk_handle #<nuklear.h>
	nk_user_font_glyph::uv : struct nk_vec2[] #<nuklear.h>
	nk_user_font_glyph::offset : struct nk_vec2 #<nuklear.h>
	nk_user_font_glyph::width : float #<nuklear.h>
	nk_user_font_glyph::height : float #<nuklear.h>
	nk_user_font_glyph::xadvance : float #<nuklear.h>
	nk_vec2::x : float #<nuklear.h>
	nk_vec2::y : float #<nuklear.h>
	nk_vec2i::x : short #<nuklear.h>
	nk_vec2i::y : short #<nuklear.h>
	nk_window::seq : unsigned int #<nuklear.h>
	nk_window::name : nk_hash #<nuklear.h>
	nk_window::name_string : char[] #<nuklear.h>
	nk_window::flags : nk_flags #<nuklear.h>
	nk_window::bounds : struct nk_rect #<nuklear.h>
	nk_window::scrollbar : struct nk_scroll #<nuklear.h>
	nk_window::buffer : struct nk_command_buffer #<nuklear.h>
	nk_window::layout : struct nk_panel* #<nuklear.h>
	nk_window::scrollbar_hiding_timer : float #<nuklear.h>
	nk_window::property : struct nk_property_state #<nuklear.h>
	nk_window::popup : struct nk_popup_state #<nuklear.h>
	nk_window::edit : struct nk_edit_state #<nuklear.h>
	nk_window::scrolled : unsigned int #<nuklear.h>
	nk_window::tables : struct nk_table* #<nuklear.h>
	nk_window::table_count : unsigned int #<nuklear.h>
	nk_window::next : struct nk_window* #<nuklear.h>
	nk_window::prev : struct nk_window* #<nuklear.h>
	nk_window::parent : struct nk_window* #<nuklear.h>
